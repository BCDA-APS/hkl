<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <package name="hkl-5.0"/>
  <c:include name="hkl.h"/>
  <namespace name="Hkl"
             version="5.0"
             shared-library="libhkl.so.5"
             c:identifier-prefixes="Hkl"
             c:symbol-prefixes="hkl">
    <glib:boxed glib:name="Axis"
                c:symbol-prefix="axis"
                glib:type-name="HklAxis"
                glib:get-type="hkl_axis_get_type">
    </glib:boxed>
    <constant name="DEGTORAD" value="0" c:type="HKL_DEGTORAD">
      <type name="gint" c:type="gint"/>
    </constant>
    <record name="Detector"
            c:type="HklDetector"
            glib:type-name="HklDetector"
            glib:get-type="hkl_detector_get_type"
            c:symbol-prefix="detector">
      <constructor name="factory_new" c:identifier="hkl_detector_factory_new">
        <doc xml:whitespace="preserve">Detector factory</doc>
        <return-value transfer-ownership="full">
          <type name="Detector" c:type="HklDetector*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="DetectorType" c:type="HklDetectorType"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="free" c:identifier="hkl_detector_free" introspectable="0">
        <doc xml:whitespace="preserve">destructor</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Detector" c:type="HklDetector*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="idx_set" c:identifier="hkl_detector_idx_set">
        <doc xml:whitespace="preserve">Attach a detector to a given holder</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Detector" c:type="HklDetector*"/>
          </instance-parameter>
          <parameter name="idx" transfer-ownership="none">
            <doc xml:whitespace="preserve">the index of the holder</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <function name="fprintf"
                c:identifier="hkl_detector_fprintf"
                introspectable="0">
        <doc xml:whitespace="preserve">print to a FILE the detector members</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="f" transfer-ownership="none">
            <type name="gpointer" c:type="FILE*"/>
          </parameter>
          <parameter name="self" transfer-ownership="none">
            <type name="Detector" c:type="const HklDetector*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <enumeration name="DetectorType"
                 glib:type-name="HklDetectorType"
                 glib:get-type="hkl_detector_type_get_type"
                 c:type="HklDetectorType">
      <member name="0d"
              value="0"
              c:identifier="HKL_DETECTOR_TYPE_0D"
              glib:nick="0d">
      </member>
    </enumeration>
    <constant name="EPSILON" value="0.000001" c:type="HKL_EPSILON">
      <type name="gdouble" c:type="gdouble"/>
    </constant>
    <record name="Engine"
            c:type="HklEngine"
            glib:type-name="HklEngine"
            glib:get-type="hkl_engine_get_type"
            c:symbol-prefix="engine">
      <method name="engines" c:identifier="hkl_engine_engines">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the HklEngineList which contain this HklEngine</doc>
          <type name="EngineList" c:type="HklEngineList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Engine" c:type="HklEngine*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get" c:identifier="hkl_engine_get" introspectable="0">
        <doc xml:whitespace="preserve">get the values of the pseudo-axes from the real-axes values</doc>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">The HklEngine</doc>
            <type name="Engine" c:type="HklEngine*"/>
          </instance-parameter>
          <parameter name="error" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">NULL or an HklError</doc>
            <type name="Error" c:type="HklError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="initialize"
              c:identifier="hkl_engine_initialize"
              introspectable="0">
        <doc xml:whitespace="preserve">initialize the HklEngine</doc>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the HklEngine</doc>
            <type name="Engine" c:type="HklEngine*"/>
          </instance-parameter>
          <parameter name="error" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">NULL or an HklError to check for error's during the initialization</doc>
            <type name="Error" c:type="HklError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="len" c:identifier="hkl_engine_len" introspectable="0">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the len of the pseudo axes of the HklEngine</doc>
          <type name="guint" c:type="unsigned int"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Engine" c:type="const HklEngine*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="mode" c:identifier="hkl_engine_mode">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the current mode of the HklEngine</doc>
          <type name="Mode" c:type="HklMode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Engine" c:type="HklEngine*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="modes"
              c:identifier="hkl_engine_modes"
              shadowed-by="modes_as_gslist"
              introspectable="0">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the current mode of the HklEngine</doc>
          <type c:type="darray_mode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Engine" c:type="HklEngine*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="modes_as_gslist"
              c:identifier="hkl_engine_modes_as_gslist"
              shadows="modes">
        <return-value transfer-ownership="container">
          <doc xml:whitespace="preserve">list of mdoe, free the list with g_slist_free when done.</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="Mode"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Engine" c:type="HklEngine*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="name" c:identifier="hkl_engine_name">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the name of the HklEngine</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Engine" c:type="const HklEngine*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="pseudo_axes" c:identifier="hkl_engine_pseudo_axes">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the pseudo_axes managed by this HklEngine</doc>
          <type name="ParameterList" c:type="HklParameterList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Engine" c:type="HklEngine*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="select_mode" c:identifier="hkl_engine_select_mode">
        <doc xml:whitespace="preserve">This method also populate the self-&gt;axes from the mode-&gt;axes_names.
this is to speed the computation of the numerical axes.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the HklEngine</doc>
            <type name="Engine" c:type="HklEngine*"/>
          </instance-parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:whitespace="preserve">the #HklPseudoAxisMode to select</doc>
            <type name="Mode" c:type="HklMode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="select_mode_by_name"
              c:identifier="hkl_engine_select_mode_by_name">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Engine" c:type="HklEngine*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set" c:identifier="hkl_engine_set" introspectable="0">
        <doc xml:whitespace="preserve">use the HklPseudoaxisEngine values to compute the real axes values.</doc>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the HklEngine</doc>
            <type name="Engine" c:type="HklEngine*"/>
          </instance-parameter>
          <parameter name="error" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">NULL or an HklError</doc>
            <type name="Error" c:type="HklError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_values_unit"
              c:identifier="hkl_engine_set_values_unit"
              throws="1">
        <doc xml:whitespace="preserve">compute the #HklGeometry angles for this #HklEngine</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE on success or FALSE if an error occurred</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Engine" c:type="HklEngine*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:whitespace="preserve">the values to set</doc>
            <array length="1" zero-terminated="0" c:type="double">
              <type name="gdouble" c:type="double"/>
            </array>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <doc xml:whitespace="preserve">the len of the values array</doc>
            <type name="guint" c:type="unsigned int"/>
          </parameter>
        </parameters>
      </method>
      <function name="fprintf"
                c:identifier="hkl_engine_fprintf"
                introspectable="0">
        <doc xml:whitespace="preserve">print to a FILE the HklEngine</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="f" transfer-ownership="none">
            <doc xml:whitespace="preserve">the FILE</doc>
            <type name="gpointer" c:type="FILE*"/>
          </parameter>
          <parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the HklEngine</doc>
            <type name="Engine" c:type="const HklEngine*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <record name="EngineList"
            c:type="HklEngineList"
            glib:type-name="HklEngineList"
            glib:get-type="hkl_engine_list_get_type"
            c:symbol-prefix="engine_list">
      <method name="engines"
              c:identifier="hkl_engine_list_engines"
              shadowed-by="engines_as_gslist"
              introspectable="0">
        <doc xml:whitespace="preserve">Return: a pointer on the engine array</doc>
        <return-value>
          <type c:type="darray_engine*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="EngineList" c:type="HklEngineList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="engines_as_gslist"
              c:identifier="hkl_engine_list_engines_as_gslist"
              shadows="engines">
        <return-value transfer-ownership="container">
          <doc xml:whitespace="preserve">list of engines, free the list with g_slist_free when done.</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="Engine"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="EngineList" c:type="HklEngineList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free"
              c:identifier="hkl_engine_list_free"
              introspectable="0">
        <doc xml:whitespace="preserve">destructor</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the #HklEngineList to destroy</doc>
            <type name="EngineList" c:type="HklEngineList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="geometries" c:identifier="hkl_engine_list_geometries">
        <doc xml:whitespace="preserve">Return: a pointer on the engine array</doc>
        <return-value transfer-ownership="none">
          <type name="GeometryList" c:type="const HklGeometryList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="EngineList" c:type="const HklEngineList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="geometry_set" c:identifier="hkl_engine_list_geometry_set">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="EngineList" c:type="HklEngineList*"/>
          </instance-parameter>
          <parameter name="geometry" transfer-ownership="none">
            <type name="Geometry" c:type="const HklGeometry*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get" c:identifier="hkl_engine_list_get">
        <doc xml:whitespace="preserve">apply the get method to all the #HklEngine of the list
after this it is possible to retrive all the #HklPseudoAxis values.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">HKL_SUCCESS or HKL_FAIL if one of the #HklEngine get method failed.</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the list of #HklEngine</doc>
            <type name="EngineList" c:type="HklEngineList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_by_name" c:identifier="hkl_engine_list_get_by_name">
        <doc xml:whitespace="preserve">get the #HklEngine by its name from the list.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the requested engine</doc>
          <type name="Engine" c:type="HklEngine*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="EngineList" c:type="HklEngineList*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:whitespace="preserve">the name of the requested #HklPseudoAxisEngin</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_geometry"
              c:identifier="hkl_engine_list_get_geometry"
              introspectable="0">
        <doc xml:whitespace="preserve">Return: a pointer on the geometry member</doc>
        <return-value transfer-ownership="full">
          <type name="Geometry" c:type="HklGeometry*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="EngineList" c:type="HklEngineList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pseudo_axis_by_name"
              c:identifier="hkl_engine_list_get_pseudo_axis_by_name">
        <doc xml:whitespace="preserve">Todo: test</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the requested #HklPseudoAxis</doc>
          <type name="Parameter" c:type="HklParameter*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the engine list</doc>
            <type name="EngineList" c:type="const HklEngineList*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:whitespace="preserve">the name of the requested #HklPseudoAxis</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="init" c:identifier="hkl_engine_list_init">
        <doc xml:whitespace="preserve">before using an engine list you must associate all engines to a
Geometry, a detector and a sample.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the engine list</doc>
            <type name="EngineList" c:type="HklEngineList*"/>
          </instance-parameter>
          <parameter name="geometry" transfer-ownership="none">
            <doc xml:whitespace="preserve">the associated #HklGeometry</doc>
            <type name="Geometry" c:type="HklGeometry*"/>
          </parameter>
          <parameter name="detector" transfer-ownership="none">
            <doc xml:whitespace="preserve">the associated #HklDetector</doc>
            <type name="Detector" c:type="HklDetector*"/>
          </parameter>
          <parameter name="sample" transfer-ownership="none">
            <doc xml:whitespace="preserve">the associated #HklSample</doc>
            <type name="Sample" c:type="HklSample*"/>
          </parameter>
        </parameters>
      </method>
      <method name="select_solution"
              c:identifier="hkl_engine_list_select_solution">
        <doc xml:whitespace="preserve">this method set the geometry member with the ith selected solution.
if the index is out of range (idx &gt; number of solution) the method
do nothing.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="EngineList" c:type="HklEngineList*"/>
          </instance-parameter>
          <parameter name="idx" transfer-ownership="none">
            <doc xml:whitespace="preserve">the index of the solution to select</doc>
            <type name="guint" c:type="unsigned int"/>
          </parameter>
        </parameters>
      </method>
      <function name="fprintf"
                c:identifier="hkl_engine_list_fprintf"
                introspectable="0">
        <doc xml:whitespace="preserve">print to a FILE the #HklEngineList</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="f" transfer-ownership="none">
            <doc xml:whitespace="preserve">the File</doc>
            <type name="gpointer" c:type="FILE*"/>
          </parameter>
          <parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the list</doc>
            <type name="EngineList" c:type="const HklEngineList*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <record name="Error"
            c:type="HklError"
            glib:type-name="HklError"
            glib:get-type="hkl_error_get_type"
            c:symbol-prefix="error">
      <method name="message_get" c:identifier="hkl_error_message_get">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the message of the HklError</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Error" c:type="const HklError*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <constant name="FALSE" value="0" c:type="HKL_FALSE">
      <type name="gint" c:type="gint"/>
    </constant>
    <record name="Factory" c:type="HklFactory" disguised="1">
      <method name="create_new_engine_list"
              c:identifier="hkl_factory_create_new_engine_list">
        <return-value transfer-ownership="full">
          <type name="EngineList" c:type="HklEngineList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Factory" c:type="const HklFactory*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="create_new_geometry"
              c:identifier="hkl_factory_create_new_geometry">
        <return-value transfer-ownership="full">
          <type name="Geometry" c:type="HklGeometry*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Factory" c:type="const HklFactory*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="name" c:identifier="hkl_factory_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Factory" c:type="const HklFactory*"/>
          </instance-parameter>
        </parameters>
      </method>
      <function name="get_all"
                c:identifier="hkl_factory_get_all"
                introspectable="0">
        <return-value>
          <type name="Factory" c:type="HklFactory**"/>
        </return-value>
        <parameters>
          <parameter name="n" transfer-ownership="none">
            <type name="guint" c:type="unsigned int*"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_by_name"
                c:identifier="hkl_factory_get_by_name"
                introspectable="0">
        <return-value>
          <type name="Factory" c:type="HklFactory*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <record name="Geometry"
            c:type="HklGeometry"
            glib:type-name="HklGeometry"
            glib:get-type="hkl_geometry_get_type"
            c:symbol-prefix="geometry">
      <method name="axes" c:identifier="hkl_geometry_axes">
        <return-value transfer-ownership="container">
          <doc xml:whitespace="preserve">list of HklParameter, free the list with g_slist_free when done.</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="Parameter"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Geometry" c:type="HklGeometry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="axes_get"
              c:identifier="hkl_geometry_axes_get"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type c:type="const darray_parameter*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Geometry" c:type="const HklGeometry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="axis_get"
              c:identifier="hkl_geometry_axis_get"
              introspectable="0">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the parameter corresponding to the axis name.</doc>
          <type name="Parameter" c:type="const HklParameter*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Geometry" c:type="const HklGeometry*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:whitespace="preserve">the name of the axis your are requesting</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="axis_set" c:identifier="hkl_geometry_axis_set">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Geometry" c:type="HklGeometry*"/>
          </instance-parameter>
          <parameter name="axis" transfer-ownership="none">
            <type name="Parameter" c:type="const HklParameter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="hkl_geometry_free" introspectable="0">
        <doc xml:whitespace="preserve">destructor</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Geometry" c:type="HklGeometry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_axes_values_unit"
              c:identifier="hkl_geometry_get_axes_values_unit">
        <return-value transfer-ownership="container">
          <doc xml:whitespace="preserve">list of axes values, free the list with free when done.</doc>
          <array length="0" zero-terminated="0" c:type="double*">
            <type name="gdouble" c:type="double"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Geometry" c:type="const HklGeometry*"/>
          </instance-parameter>
          <parameter name="len"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="full">
            <doc xml:whitespace="preserve">the length of the returned array</doc>
            <type name="guint" c:type="unsigned int*"/>
          </parameter>
        </parameters>
      </method>
      <method name="name_get" c:identifier="hkl_geometry_name_get">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Geometry" c:type="const HklGeometry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="randomize"
              c:identifier="hkl_geometry_randomize"
              introspectable="0">
        <doc xml:whitespace="preserve">randomize the #HklGeometry</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Geometry" c:type="HklGeometry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set" c:identifier="hkl_geometry_set">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Geometry" c:type="HklGeometry*"/>
          </instance-parameter>
          <parameter name="src" transfer-ownership="none">
            <type name="Geometry" c:type="const HklGeometry*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_axes_values_unit"
              c:identifier="hkl_geometry_set_axes_values_unit">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Geometry" c:type="HklGeometry*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:whitespace="preserve">the values to set.</doc>
            <array length="1" zero-terminated="0" c:type="double*">
              <type name="gdouble" c:type="double"/>
            </array>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <doc xml:whitespace="preserve">the length of the values array.</doc>
            <type name="guint" c:type="unsigned int"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_values_unit_v"
              c:identifier="hkl_geometry_set_values_unit_v"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Geometry" c:type="HklGeometry*"/>
          </instance-parameter>
          <parameter name="arg1" transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="wavelength_get" c:identifier="hkl_geometry_wavelength_get">
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Geometry" c:type="const HklGeometry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="wavelength_set" c:identifier="hkl_geometry_wavelength_set">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Geometry" c:type="HklGeometry*"/>
          </instance-parameter>
          <parameter name="wavelength" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <function name="fprintf"
                c:identifier="hkl_geometry_fprintf"
                introspectable="0">
        <doc xml:whitespace="preserve">print into a file the #HklGeometry</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file" transfer-ownership="none">
            <type name="gpointer" c:type="FILE*"/>
          </parameter>
          <parameter name="self" transfer-ownership="none">
            <type name="Geometry" c:type="const HklGeometry*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <record name="GeometryList"
            c:type="HklGeometryList"
            glib:type-name="HklGeometryList"
            glib:get-type="hkl_geometry_list_get_type"
            c:symbol-prefix="geometry_list">
      <method name="items" c:identifier="hkl_geometry_list_items">
        <return-value transfer-ownership="container">
          <doc xml:whitespace="preserve">list of items, free the list with g_slist_free when done.</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="GeometryListItem"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the #HklGeometryList</doc>
            <type name="GeometryList" c:type="HklGeometryList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="items_get"
              c:identifier="hkl_geometry_list_items_get"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type c:type="const darray_item*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="GeometryList" c:type="const HklGeometryList*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <record name="GeometryListItem"
            c:type="HklGeometryListItem"
            glib:type-name="HklGeometryListItem"
            glib:get-type="hkl_geometry_list_item_get_type"
            c:symbol-prefix="geometry_list_item">
      <method name="geometry" c:identifier="hkl_geometry_list_item_geometry">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">The geometry contain inside the HklGeometryListItem</doc>
          <type name="Geometry" c:type="const HklGeometry*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="GeometryListItem" c:type="const HklGeometryListItem*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="geometry_get"
              c:identifier="hkl_geometry_list_item_geometry_get"
              introspectable="0">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">The geometry contain inside the HklGeometryListItem</doc>
          <type name="Geometry" c:type="const HklGeometry*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="GeometryListItem" c:type="const HklGeometryListItem*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <record name="Lattice"
            c:type="HklLattice"
            glib:type-name="HklLattice"
            glib:get-type="hkl_lattice_get_type"
            c:symbol-prefix="lattice">
      <constructor name="new" c:identifier="hkl_lattice_new">
        <doc xml:whitespace="preserve">constructor</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new HklLattice</doc>
          <type name="Lattice" c:type="HklLattice*"/>
        </return-value>
        <parameters>
          <parameter name="a" transfer-ownership="none">
            <doc xml:whitespace="preserve">the length of the a parameter</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="b" transfer-ownership="none">
            <doc xml:whitespace="preserve">the length of the b parameter</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="c" transfer-ownership="none">
            <doc xml:whitespace="preserve">the length of the c parameter</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="alpha" transfer-ownership="none">
            <doc xml:whitespace="preserve">the angle between b and c (radian)</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="beta" transfer-ownership="none">
            <doc xml:whitespace="preserve">the angle between a and c (radian)</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="gamma" transfer-ownership="none">
            <doc xml:whitespace="preserve">the angle between a and b (radian)</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_default"
                   c:identifier="hkl_lattice_new_default"
                   introspectable="0">
        <doc xml:whitespace="preserve">default constructor</doc>
        <return-value transfer-ownership="full">
          <type name="Lattice" c:type="HklLattice*"/>
        </return-value>
      </constructor>
      <method name="a_get" c:identifier="hkl_lattice_a_get" introspectable="0">
        <return-value transfer-ownership="none">
          <type name="Parameter" c:type="const HklParameter*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Lattice" c:type="const HklLattice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="a_set" c:identifier="hkl_lattice_a_set" introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Lattice" c:type="HklLattice*"/>
          </instance-parameter>
          <parameter name="parameter" transfer-ownership="none">
            <doc xml:whitespace="preserve">the parameter to set</doc>
            <type name="Parameter" c:type="const HklParameter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="alpha_get"
              c:identifier="hkl_lattice_alpha_get"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="Parameter" c:type="const HklParameter*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Lattice" c:type="const HklLattice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="alpha_set"
              c:identifier="hkl_lattice_alpha_set"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Lattice" c:type="HklLattice*"/>
          </instance-parameter>
          <parameter name="parameter" transfer-ownership="none">
            <doc xml:whitespace="preserve">the parameter to set</doc>
            <type name="Parameter" c:type="const HklParameter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="b_get" c:identifier="hkl_lattice_b_get" introspectable="0">
        <return-value transfer-ownership="none">
          <type name="Parameter" c:type="const HklParameter*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Lattice" c:type="const HklLattice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="b_set" c:identifier="hkl_lattice_b_set" introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Lattice" c:type="HklLattice*"/>
          </instance-parameter>
          <parameter name="parameter" transfer-ownership="none">
            <doc xml:whitespace="preserve">the parameter to set</doc>
            <type name="Parameter" c:type="const HklParameter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="beta_get"
              c:identifier="hkl_lattice_beta_get"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="Parameter" c:type="const HklParameter*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Lattice" c:type="const HklLattice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="beta_set"
              c:identifier="hkl_lattice_beta_set"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Lattice" c:type="HklLattice*"/>
          </instance-parameter>
          <parameter name="parameter" transfer-ownership="none">
            <doc xml:whitespace="preserve">the parameter to set</doc>
            <type name="Parameter" c:type="const HklParameter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="c_get" c:identifier="hkl_lattice_c_get" introspectable="0">
        <return-value transfer-ownership="none">
          <type name="Parameter" c:type="const HklParameter*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Lattice" c:type="const HklLattice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="c_set" c:identifier="hkl_lattice_c_set" introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Lattice" c:type="HklLattice*"/>
          </instance-parameter>
          <parameter name="parameter" transfer-ownership="none">
            <doc xml:whitespace="preserve">the parameter to set</doc>
            <type name="Parameter" c:type="const HklParameter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="hkl_lattice_free" introspectable="0">
        <doc xml:whitespace="preserve">destructor</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Lattice" c:type="HklLattice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="gamma_get"
              c:identifier="hkl_lattice_gamma_get"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="Parameter" c:type="const HklParameter*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Lattice" c:type="const HklLattice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="gamma_set"
              c:identifier="hkl_lattice_gamma_set"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Lattice" c:type="HklLattice*"/>
          </instance-parameter>
          <parameter name="parameter" transfer-ownership="none">
            <doc xml:whitespace="preserve">the parameter to set</doc>
            <type name="Parameter" c:type="const HklParameter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get" c:identifier="hkl_lattice_get">
        <doc xml:whitespace="preserve">get the lattice parameters</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">all the parameters</doc>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Lattice" c:type="const HklLattice*"/>
          </instance-parameter>
          <parameter name="a"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <type name="gdouble" c:type="double*"/>
          </parameter>
          <parameter name="b"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <type name="gdouble" c:type="double*"/>
          </parameter>
          <parameter name="c"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <type name="gdouble" c:type="double*"/>
          </parameter>
          <parameter name="alpha"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <type name="gdouble" c:type="double*"/>
          </parameter>
          <parameter name="beta"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <type name="gdouble" c:type="double*"/>
          </parameter>
          <parameter name="gamma"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <type name="gdouble" c:type="double*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_1_B"
              c:identifier="hkl_lattice_get_1_B"
              introspectable="0">
        <doc xml:whitespace="preserve">Compute the invert of B (needed by the hkl_sample_UB_set method)
should be optimized</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">HKL_TRUE or HKL_FALSE depending of the success of the computation.</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the @HklLattice</doc>
            <type name="Lattice" c:type="const HklLattice*"/>
          </instance-parameter>
          <parameter name="B"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:whitespace="preserve">where to store the 1/B matrix</doc>
            <type name="Matrix" c:type="HklMatrix*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_B" c:identifier="hkl_lattice_get_B" introspectable="0">
        <doc xml:whitespace="preserve">Get the B matrix from the lattice parameters</doc>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Lattice" c:type="const HklLattice*"/>
          </instance-parameter>
          <parameter name="B"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:whitespace="preserve">where to store the B matrix</doc>
            <type name="Matrix" c:type="HklMatrix*"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_copy"
              c:identifier="hkl_lattice_new_copy"
              introspectable="0">
        <doc xml:whitespace="preserve">copy constructor</doc>
        <return-value transfer-ownership="full">
          <type name="Lattice" c:type="HklLattice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Lattice" c:type="const HklLattice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reciprocal"
              c:identifier="hkl_lattice_reciprocal"
              introspectable="0">
        <doc xml:whitespace="preserve">compute the reciprocal lattice</doc>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Lattice" c:type="const HklLattice*"/>
          </instance-parameter>
          <parameter name="reciprocal"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="Lattice" c:type="HklLattice*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set" c:identifier="hkl_lattice_set">
        <doc xml:whitespace="preserve">set the lattice parameters</doc>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Lattice" c:type="HklLattice*"/>
          </instance-parameter>
          <parameter name="a" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="b" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="c" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="alpha" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="beta" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="gamma" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <record name="Matrix"
            c:type="HklMatrix"
            glib:type-name="HklMatrix"
            glib:get-type="hkl_matrix_get_type"
            c:symbol-prefix="matrix">
      <constructor name="new" c:identifier="hkl_matrix_new" introspectable="0">
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new uninitialized HklMatrix</doc>
          <type name="Matrix" c:type="HklMatrix*"/>
        </return-value>
      </constructor>
      <constructor name="new_euler" c:identifier="hkl_matrix_new_euler">
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">Create a rotation #HklMatrix from three eulerians angles.</doc>
          <type name="Matrix" c:type="HklMatrix*"/>
        </return-value>
        <parameters>
          <parameter name="euler_x" transfer-ownership="none">
            <doc xml:whitespace="preserve">the eulerian value along X</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="euler_y" transfer-ownership="none">
            <doc xml:whitespace="preserve">the eulerian value along Y</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="euler_z" transfer-ownership="none">
            <doc xml:whitespace="preserve">the eulerian value along Z</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_full"
                   c:identifier="hkl_matrix_new_full"
                   introspectable="0">
        <doc xml:whitespace="preserve">@todo test</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new HklMAtrix</doc>
          <type name="Matrix" c:type="HklMatrix*"/>
        </return-value>
        <parameters>
          <parameter name="m11" transfer-ownership="none">
            <doc xml:whitespace="preserve">the matrix 11 value</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="m12" transfer-ownership="none">
            <doc xml:whitespace="preserve">the matrix 12 value</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="m13" transfer-ownership="none">
            <doc xml:whitespace="preserve">the matrix 13 value</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="m21" transfer-ownership="none">
            <doc xml:whitespace="preserve">the matrix 21 value</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="m22" transfer-ownership="none">
            <doc xml:whitespace="preserve">the matrix 22 value</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="m23" transfer-ownership="none">
            <doc xml:whitespace="preserve">the matrix 23 value</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="m31" transfer-ownership="none">
            <doc xml:whitespace="preserve">the matrix 31 value</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="m32" transfer-ownership="none">
            <doc xml:whitespace="preserve">the matrix 32 value</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="m33" transfer-ownership="none">
            <doc xml:whitespace="preserve">the matrix 33 value</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="cmp" c:identifier="hkl_matrix_cmp">
        <doc xml:whitespace="preserve">compare two #HklMatrix.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">return HKL_TRUE if | self - m | &gt; HKL_EPSILON</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the first #HklMatrix</doc>
            <type name="Matrix" c:type="const HklMatrix*"/>
          </instance-parameter>
          <parameter name="m" transfer-ownership="none">
            <doc xml:whitespace="preserve">the #HklMatrix to compare with</doc>
            <type name="Matrix" c:type="const HklMatrix*"/>
          </parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="hkl_matrix_free" introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Matrix" c:type="HklMatrix*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get" c:identifier="hkl_matrix_get" introspectable="0">
        <doc xml:whitespace="preserve">@todo test</doc>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Matrix" c:type="const HklMatrix*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <doc xml:whitespace="preserve">the i coordinate</doc>
            <type name="guint" c:type="unsigned int"/>
          </parameter>
          <parameter name="j" transfer-ownership="none">
            <doc xml:whitespace="preserve">the j coordinate</doc>
            <type name="guint" c:type="unsigned int"/>
          </parameter>
        </parameters>
      </method>
      <method name="init" c:identifier="hkl_matrix_init">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the #HklMatrix to initialize</doc>
            <type name="Matrix" c:type="HklMatrix*"/>
          </instance-parameter>
          <parameter name="m11" transfer-ownership="none">
            <doc xml:whitespace="preserve">the matrix 11 value</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="m12" transfer-ownership="none">
            <doc xml:whitespace="preserve">the matrix 12 value</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="m13" transfer-ownership="none">
            <doc xml:whitespace="preserve">the matrix 13 value</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="m21" transfer-ownership="none">
            <doc xml:whitespace="preserve">the matrix 21 value</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="m22" transfer-ownership="none">
            <doc xml:whitespace="preserve">the matrix 22 value</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="m23" transfer-ownership="none">
            <doc xml:whitespace="preserve">the matrix 23 value</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="m31" transfer-ownership="none">
            <doc xml:whitespace="preserve">the matrix 31 value</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="m32" transfer-ownership="none">
            <doc xml:whitespace="preserve">the matrix 32 value</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="m33" transfer-ownership="none">
            <doc xml:whitespace="preserve">the matrix 33 value</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="times_matrix" c:identifier="hkl_matrix_times_matrix">
        <doc xml:whitespace="preserve">compute the matrix multiplication self = self * m</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the #HklMatrix to modify</doc>
            <type name="Matrix" c:type="HklMatrix*"/>
          </instance-parameter>
          <parameter name="m" transfer-ownership="none">
            <doc xml:whitespace="preserve">the #HklMatrix to multiply by</doc>
            <type name="Matrix" c:type="const HklMatrix*"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <record name="Mode" c:type="HklMode" disguised="1">
      <method name="name" c:identifier="hkl_mode_name">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the name of the HklMode</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Mode" c:type="const HklMode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="parameters" c:identifier="hkl_mode_parameters">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the parameters of the HklMode</doc>
          <type name="ParameterList" c:type="HklParameterList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Mode" c:type="HklMode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <function name="fprintf"
                c:identifier="hkl_mode_fprintf"
                introspectable="0">
        <doc xml:whitespace="preserve">print to a FILE the HklPSeudoAxisEngineMode members</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="f" transfer-ownership="none">
            <type name="gpointer" c:type="FILE*"/>
          </parameter>
          <parameter name="self" transfer-ownership="none">
            <type name="Mode" c:type="const HklMode*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <record name="Parameter"
            c:type="HklParameter"
            glib:type-name="HklParameter"
            glib:get-type="hkl_parameter_get_type"
            c:symbol-prefix="parameter">
      <method name="fit_get" c:identifier="hkl_parameter_fit_get">
        <doc xml:whitespace="preserve">Retuen value: the #HklParameter fit value, True is the parameter can be fitted, not otherwise
@todo test</doc>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Parameter" c:type="const HklParameter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="fit_set" c:identifier="hkl_parameter_fit_set">
        <doc xml:whitespace="preserve">set the #HklParameter fit value, True is the parameter can be fitted, not otherwise
@todo test</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Parameter" c:type="HklParameter*"/>
          </instance-parameter>
          <parameter name="fit" transfer-ownership="none">
            <doc xml:whitespace="preserve">the fit value to set</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="hkl_parameter_free" introspectable="0">
        <doc xml:whitespace="preserve">delete an #HklParameter</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Parameter" c:type="HklParameter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="min_max_get"
              c:identifier="hkl_parameter_min_max_get"
              introspectable="0">
        <doc xml:whitespace="preserve">get the max value of the #HklParameter</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Parameter" c:type="const HklParameter*"/>
          </instance-parameter>
          <parameter name="min" transfer-ownership="none">
            <type name="gdouble" c:type="double*"/>
          </parameter>
          <parameter name="max" transfer-ownership="none">
            <type name="gdouble" c:type="double*"/>
          </parameter>
        </parameters>
      </method>
      <method name="min_max_set"
              c:identifier="hkl_parameter_min_max_set"
              introspectable="0">
        <doc xml:whitespace="preserve">set the #HklParameter range.
@todo test</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Parameter" c:type="HklParameter*"/>
          </instance-parameter>
          <parameter name="min" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="max" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="min_max_unit_get"
              c:identifier="hkl_parameter_min_max_unit_get"
              introspectable="0">
        <doc xml:whitespace="preserve">get the #HklParameter range, min, max
@todo test</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Parameter" c:type="const HklParameter*"/>
          </instance-parameter>
          <parameter name="min" transfer-ownership="none">
            <type name="gdouble" c:type="double*"/>
          </parameter>
          <parameter name="max" transfer-ownership="none">
            <type name="gdouble" c:type="double*"/>
          </parameter>
        </parameters>
      </method>
      <method name="min_max_unit_set"
              c:identifier="hkl_parameter_min_max_unit_set">
        <doc xml:whitespace="preserve">set the #HklParameter range express in the punit #HklUnit
@todo test</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Parameter" c:type="HklParameter*"/>
          </instance-parameter>
          <parameter name="min" transfer-ownership="none">
            <doc xml:whitespace="preserve">the minimum value to set</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="max" transfer-ownership="none">
            <doc xml:whitespace="preserve">the maximum value to set</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="name_get" c:identifier="hkl_parameter_name_get">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Parameter" c:type="const HklParameter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="new_copy"
              c:identifier="hkl_parameter_new_copy"
              introspectable="0">
        <doc xml:whitespace="preserve">copy an #HklParameter</doc>
        <return-value transfer-ownership="full">
          <type name="Parameter" c:type="HklParameter*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Parameter" c:type="const HklParameter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="randomize"
              c:identifier="hkl_parameter_randomize"
              introspectable="0">
        <doc xml:whitespace="preserve">randomize the #HklParameter value into the min,max range</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Parameter" c:type="HklParameter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="value_get" c:identifier="hkl_parameter_value_get">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the value of the #HklParameter</doc>
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Parameter" c:type="const HklParameter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="value_set"
              c:identifier="hkl_parameter_value_set"
              introspectable="0">
        <doc xml:whitespace="preserve">set the value of an #HklParameter</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">true if succeed or false otherwise</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">this ptr</doc>
            <type name="Parameter" c:type="HklParameter*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:whitespace="preserve">the value to set</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="error" transfer-ownership="none">
            <doc xml:whitespace="preserve">the error set if something goes wrong</doc>
            <type name="Error" c:type="HklError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="value_unit_get"
              c:identifier="hkl_parameter_value_unit_get">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the value of the #HklParameter expressed in the user unit</doc>
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Parameter" c:type="const HklParameter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="value_unit_set"
              c:identifier="hkl_parameter_value_unit_set"
              introspectable="0">
        <doc xml:whitespace="preserve">set the value of the parameter express in the punit #HklUnit
@todo test</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">true if succeed or false otherwise</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Parameter" c:type="HklParameter*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:whitespace="preserve">the value to set</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="error" transfer-ownership="none">
            <doc xml:whitespace="preserve">the error set if something goes wrong</doc>
            <type name="Error" c:type="HklError**"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <record name="ParameterList"
            c:type="HklParameterList"
            glib:type-name="HklParameterList"
            glib:get-type="hkl_parameter_list_get_type"
            c:symbol-prefix="parameter_list">
      <field name="item" writable="1">
        <type name="Parameter" c:type="HklParameter**"/>
      </field>
      <field name="size" writable="1">
        <type name="gulong" c:type="size_t"/>
      </field>
      <field name="alloc" writable="1">
        <type name="gulong" c:type="size_t"/>
      </field>
      <method name="parameters" c:identifier="hkl_parameter_list_parameters">
        <return-value transfer-ownership="container">
          <doc xml:whitespace="preserve">list of parameters free the list with g_slist_free when done.</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="Parameter"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="ParameterList" c:type="HklParameterList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="randomize"
              c:identifier="hkl_parameter_list_randomize"
              introspectable="0">
        <doc xml:whitespace="preserve">randomize all parameters of the list</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="ParameterList" c:type="HklParameterList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="values_set" c:identifier="hkl_parameter_list_values_set">
        <doc xml:whitespace="preserve">set the parameter list with the given values</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">true if succeed or false otherwise</doc>
          <type name="guint" c:type="unsigned int"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="ParameterList" c:type="HklParameterList*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:whitespace="preserve">the values to set</doc>
            <array length="1" zero-terminated="0" c:type="double">
              <type name="gdouble" c:type="double"/>
            </array>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <doc xml:whitespace="preserve">the length of the values</doc>
            <type name="guint" c:type="unsigned int"/>
          </parameter>
          <parameter name="error" transfer-ownership="none">
            <doc xml:whitespace="preserve">error set if something goes wrong</doc>
            <type name="Error" c:type="HklError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="values_unit_get"
              c:identifier="hkl_parameter_list_values_unit_get">
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">list of pseudo axes values with unit free the array with free when done</doc>
          <array length="0" zero-terminated="0" c:type="double*">
            <type name="gdouble" c:type="double"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="ParameterList" c:type="const HklParameterList*"/>
          </instance-parameter>
          <parameter name="len"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="full">
            <doc xml:whitespace="preserve">the length of the returned array</doc>
            <type name="guint" c:type="unsigned int*"/>
          </parameter>
        </parameters>
      </method>
      <method name="values_unit_set_binding"
              c:identifier="hkl_parameter_list_values_unit_set_binding"
              throws="1">
        <doc xml:whitespace="preserve">set the parameter list with the given values</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">true if succeed or false otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="ParameterList" c:type="HklParameterList*"/>
          </instance-parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:whitespace="preserve">the values to set</doc>
            <array length="1" zero-terminated="0" c:type="double*">
              <type name="gdouble" c:type="double"/>
            </array>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <doc xml:whitespace="preserve">the length of the values</doc>
            <type name="guint" c:type="uint"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <record name="PseudoAxis"
            c:type="HklPseudoAxis"
            glib:type-name="HklPseudoAxis"
            glib:get-type="hkl_pseudo_axis_get_type"
            c:symbol-prefix="pseudo_axis">
    </record>
    <constant name="RADTODEG" value="0" c:type="HKL_RADTODEG">
      <type name="gint" c:type="gint"/>
    </constant>
    <record name="Sample"
            c:type="HklSample"
            glib:type-name="HklSample"
            glib:get-type="hkl_sample_get_type"
            c:symbol-prefix="sample">
      <constructor name="new" c:identifier="hkl_sample_new">
        <doc xml:whitespace="preserve">constructor</doc>
        <return-value transfer-ownership="full">
          <type name="Sample" c:type="HklSample*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="UB_get"
              c:identifier="hkl_sample_UB_get"
              introspectable="0">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">get the UB matrix of the sample</doc>
          <type name="Matrix" c:type="const HklMatrix*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Sample" c:type="const HklSample*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="UB_set"
              c:identifier="hkl_sample_UB_set"
              introspectable="0">
        <doc xml:whitespace="preserve">Set the UB matrix using an external UB matrix. In fact you give
the UB matrix but only the U matrix of the sample is affected by
this operation. We keep the B matrix constant.
U * B = UB -&gt; U = UB * B^-1</doc>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the sample to modify</doc>
            <type name="Sample" c:type="HklSample*"/>
          </instance-parameter>
          <parameter name="UB" transfer-ownership="none">
            <doc xml:whitespace="preserve">the UB matrix to set</doc>
            <type name="Matrix" c:type="const HklMatrix*"/>
          </parameter>
        </parameters>
      </method>
      <method name="U_get" c:identifier="hkl_sample_U_get" introspectable="0">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the U matrix of the sample</doc>
          <type name="Matrix" c:type="const HklMatrix*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Sample" c:type="const HklSample*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="U_set" c:identifier="hkl_sample_U_set">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Sample" c:type="HklSample*"/>
          </instance-parameter>
          <parameter name="U" transfer-ownership="none">
            <type name="Matrix" c:type="const HklMatrix*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_reflection"
              c:identifier="hkl_sample_add_reflection"
              introspectable="0">
        <doc xml:whitespace="preserve">add a reflection to the sample</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the added HklSampleReflection</doc>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Sample" c:type="HklSample*"/>
          </instance-parameter>
          <parameter name="reflection" transfer-ownership="none">
            <type name="SampleReflection" c:type="HklSampleReflection*"/>
          </parameter>
        </parameters>
      </method>
      <method name="affine"
              c:identifier="hkl_sample_affine"
              introspectable="0">
        <doc xml:whitespace="preserve">affine the sample</doc>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Sample" c:type="HklSample*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="compute_UB_busing_levy"
              c:identifier="hkl_sample_compute_UB_busing_levy"
              introspectable="0">
        <doc xml:whitespace="preserve">compute the UB matrix using the Busing and Levy method
add ref</doc>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Sample" c:type="HklSample*"/>
          </instance-parameter>
          <parameter name="r1" transfer-ownership="none">
            <type name="SampleReflection" c:type="const HklSampleReflection*"/>
          </parameter>
          <parameter name="r2" transfer-ownership="none">
            <type name="SampleReflection" c:type="const HklSampleReflection*"/>
          </parameter>
        </parameters>
      </method>
      <method name="first_reflection_get"
              c:identifier="hkl_sample_first_reflection_get">
        <return-value transfer-ownership="full">
          <type name="SampleReflection" c:type="HklSampleReflection*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Sample" c:type="const HklSample*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="hkl_sample_free" introspectable="0">
        <doc xml:whitespace="preserve">destructor</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Sample" c:type="HklSample*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_reflection_mesured_angle"
              c:identifier="hkl_sample_get_reflection_mesured_angle"
              introspectable="0">
        <doc xml:whitespace="preserve">get the mesured angles between two reflections</doc>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Sample" c:type="const HklSample*"/>
          </instance-parameter>
          <parameter name="r1" transfer-ownership="none">
            <doc xml:whitespace="preserve">the first reflection</doc>
            <type name="SampleReflection" c:type="const HklSampleReflection*"/>
          </parameter>
          <parameter name="r2" transfer-ownership="none">
            <doc xml:whitespace="preserve">the second reflection</doc>
            <type name="SampleReflection" c:type="const HklSampleReflection*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_reflection_theoretical_angle"
              c:identifier="hkl_sample_get_reflection_theoretical_angle"
              introspectable="0">
        <doc xml:whitespace="preserve">get the theoretical angles between two reflections</doc>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Sample" c:type="const HklSample*"/>
          </instance-parameter>
          <parameter name="r1" transfer-ownership="none">
            <doc xml:whitespace="preserve">the first reflection</doc>
            <type name="SampleReflection" c:type="const HklSampleReflection*"/>
          </parameter>
          <parameter name="r2" transfer-ownership="none">
            <doc xml:whitespace="preserve">the second reflection</doc>
            <type name="SampleReflection" c:type="const HklSampleReflection*"/>
          </parameter>
        </parameters>
      </method>
      <method name="lattice_get" c:identifier="hkl_sample_lattice_get">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the lattice parameters of the sample.</doc>
          <type name="Lattice" c:type="const HklLattice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Sample" c:type="HklSample*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="lattice_set" c:identifier="hkl_sample_lattice_set">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Sample" c:type="HklSample*"/>
          </instance-parameter>
          <parameter name="lattice" transfer-ownership="none">
            <doc xml:whitespace="preserve">the lattice to set</doc>
            <type name="Lattice" c:type="const HklLattice*"/>
          </parameter>
        </parameters>
      </method>
      <method name="name_get" c:identifier="hkl_sample_name_get">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the name of the sample</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Sample" c:type="const HklSample*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="name_set"
              c:identifier="hkl_sample_name_set"
              introspectable="0">
        <doc xml:whitespace="preserve">set the name of the sample</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Sample" c:type="HklSample*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_copy"
              c:identifier="hkl_sample_new_copy"
              introspectable="0">
        <doc xml:whitespace="preserve">copy constructor</doc>
        <return-value transfer-ownership="full">
          <type name="Sample" c:type="HklSample*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Sample" c:type="const HklSample*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="next_reflection_get"
              c:identifier="hkl_sample_next_reflection_get">
        <return-value transfer-ownership="full">
          <type name="SampleReflection" c:type="HklSampleReflection*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Sample" c:type="const HklSample*"/>
          </instance-parameter>
          <parameter name="reflection" transfer-ownership="none">
            <type name="SampleReflection" c:type="const HklSampleReflection*"/>
          </parameter>
        </parameters>
      </method>
      <method name="ux_get"
              c:identifier="hkl_sample_ux_get"
              introspectable="0">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the ux part of the U matrix.</doc>
          <type name="Parameter" c:type="const HklParameter*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Sample" c:type="const HklSample*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="ux_set"
              c:identifier="hkl_sample_ux_set"
              introspectable="0">
        <doc xml:whitespace="preserve">set the ux part of the U matrix.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Sample" c:type="HklSample*"/>
          </instance-parameter>
          <parameter name="ux" transfer-ownership="none">
            <doc xml:whitespace="preserve">the ux parameter to set</doc>
            <type name="Parameter" c:type="const HklParameter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="uy_get"
              c:identifier="hkl_sample_uy_get"
              introspectable="0">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the uy part of the U matrix.</doc>
          <type name="Parameter" c:type="const HklParameter*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Sample" c:type="const HklSample*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="uy_set"
              c:identifier="hkl_sample_uy_set"
              introspectable="0">
        <doc xml:whitespace="preserve">set the uy part of the U matrix.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Sample" c:type="HklSample*"/>
          </instance-parameter>
          <parameter name="uy" transfer-ownership="none">
            <doc xml:whitespace="preserve">the uy parameter to set</doc>
            <type name="Parameter" c:type="const HklParameter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="uz_get"
              c:identifier="hkl_sample_uz_get"
              introspectable="0">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the uz part of the U matrix.</doc>
          <type name="Parameter" c:type="const HklParameter*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Sample" c:type="const HklSample*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="uz_set"
              c:identifier="hkl_sample_uz_set"
              introspectable="0">
        <doc xml:whitespace="preserve">set the uz part of the U matrix.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:whitespace="preserve">the this ptr</doc>
            <type name="Sample" c:type="HklSample*"/>
          </instance-parameter>
          <parameter name="uz" transfer-ownership="none">
            <doc xml:whitespace="preserve">the uz parameter to set</doc>
            <type name="Parameter" c:type="const HklParameter*"/>
          </parameter>
        </parameters>
      </method>
      <function name="del_reflection"
                c:identifier="hkl_sample_del_reflection"
                introspectable="0">
        <doc xml:whitespace="preserve">remove an HklSampleRefelction from the relfections list.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="reflection" transfer-ownership="none">
            <doc xml:whitespace="preserve">the reflection to remove.</doc>
            <type name="SampleReflection" c:type="HklSampleReflection*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <record name="SampleReflection"
            c:type="HklSampleReflection"
            glib:type-name="HklSampleReflection"
            glib:get-type="hkl_sample_reflection_get_type"
            c:symbol-prefix="sample_reflection">
      <constructor name="new"
                   c:identifier="hkl_sample_reflection_new"
                   introspectable="0">
        <doc xml:whitespace="preserve">constructeur</doc>
        <return-value transfer-ownership="full">
          <type name="SampleReflection" c:type="HklSampleReflection*"/>
        </return-value>
        <parameters>
          <parameter name="geometry" transfer-ownership="none">
            <type name="Geometry" c:type="HklGeometry*"/>
          </parameter>
          <parameter name="detector" transfer-ownership="none">
            <type name="Detector" c:type="const HklDetector*"/>
          </parameter>
          <parameter name="h" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="k" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="l" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="flag_get"
              c:identifier="hkl_sample_reflection_flag_get"
              introspectable="0">
        <doc xml:whitespace="preserve">get the flag of the reflection</doc>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="SampleReflection" c:type="const HklSampleReflection*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="flag_set"
              c:identifier="hkl_sample_reflection_flag_set"
              introspectable="0">
        <doc xml:whitespace="preserve">set the flag of the reglection</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="SampleReflection" c:type="HklSampleReflection*"/>
          </instance-parameter>
          <parameter name="flag" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="geometry_get"
              c:identifier="hkl_sample_reflection_geometry_get"
              introspectable="0">
        <doc xml:whitespace="preserve">set the geometry of the reflection</doc>
        <return-value transfer-ownership="full">
          <type name="Geometry" c:type="HklGeometry*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="SampleReflection" c:type="HklSampleReflection*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="geometry_set"
              c:identifier="hkl_sample_reflection_geometry_set"
              introspectable="0">
        <doc xml:whitespace="preserve">set the geometry of the reflection</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="SampleReflection" c:type="HklSampleReflection*"/>
          </instance-parameter>
          <parameter name="geometry" transfer-ownership="none">
            <type name="Geometry" c:type="const HklGeometry*"/>
          </parameter>
        </parameters>
      </method>
      <method name="hkl_get"
              c:identifier="hkl_sample_reflection_hkl_get"
              introspectable="0">
        <doc xml:whitespace="preserve">get the hkl value of the reflection</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="SampleReflection" c:type="const HklSampleReflection*"/>
          </instance-parameter>
          <parameter name="h" transfer-ownership="none">
            <type name="gdouble" c:type="double*"/>
          </parameter>
          <parameter name="k" transfer-ownership="none">
            <type name="gdouble" c:type="double*"/>
          </parameter>
          <parameter name="l" transfer-ownership="none">
            <type name="gdouble" c:type="double*"/>
          </parameter>
        </parameters>
      </method>
      <method name="hkl_set"
              c:identifier="hkl_sample_reflection_hkl_set"
              introspectable="0">
        <doc xml:whitespace="preserve">set the hkl value of the reflection</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="SampleReflection" c:type="HklSampleReflection*"/>
          </instance-parameter>
          <parameter name="h" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="k" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="l" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <constant name="TAU" value="0" c:type="HKL_TAU">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="TINY" value="0.000000" c:type="HKL_TINY">
      <type name="gdouble" c:type="gdouble"/>
    </constant>
    <constant name="TRUE" value="1" c:type="HKL_TRUE">
      <type name="gint" c:type="gint"/>
    </constant>
    <glib:boxed glib:name="Unit"
                c:symbol-prefix="unit"
                glib:type-name="HklUnit"
                glib:get-type="hkl_unit_get_type">
    </glib:boxed>
    <glib:boxed glib:name="Vector"
                c:symbol-prefix="vector"
                glib:type-name="HklVector"
                glib:get-type="hkl_vector_get_type">
    </glib:boxed>
    <function name="detector_fprintf"
              c:identifier="hkl_detector_fprintf"
              moved-to="Detector.fprintf"
              introspectable="0">
      <doc xml:whitespace="preserve">print to a FILE the detector members</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="f" transfer-ownership="none">
          <type name="gpointer" c:type="FILE*"/>
        </parameter>
        <parameter name="self" transfer-ownership="none">
          <type name="Detector" c:type="const HklDetector*"/>
        </parameter>
      </parameters>
    </function>
    <function name="engine_fprintf"
              c:identifier="hkl_engine_fprintf"
              moved-to="Engine.fprintf"
              introspectable="0">
      <doc xml:whitespace="preserve">print to a FILE the HklEngine</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="f" transfer-ownership="none">
          <doc xml:whitespace="preserve">the FILE</doc>
          <type name="gpointer" c:type="FILE*"/>
        </parameter>
        <parameter name="self" transfer-ownership="none">
          <doc xml:whitespace="preserve">the HklEngine</doc>
          <type name="Engine" c:type="const HklEngine*"/>
        </parameter>
      </parameters>
    </function>
    <function name="engine_list_fprintf"
              c:identifier="hkl_engine_list_fprintf"
              moved-to="EngineList.fprintf"
              introspectable="0">
      <doc xml:whitespace="preserve">print to a FILE the #HklEngineList</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="f" transfer-ownership="none">
          <doc xml:whitespace="preserve">the File</doc>
          <type name="gpointer" c:type="FILE*"/>
        </parameter>
        <parameter name="self" transfer-ownership="none">
          <doc xml:whitespace="preserve">the list</doc>
          <type name="EngineList" c:type="const HklEngineList*"/>
        </parameter>
      </parameters>
    </function>
    <function name="factories" c:identifier="hkl_factories">
      <doc xml:whitespace="preserve">return all the Hkl factories objects as a dictionnary</doc>
      <return-value transfer-ownership="container">
        <type name="GLib.HashTable" c:type="GHashTable*">
          <type name="utf8"/>
          <type name="Factory"/>
        </type>
      </return-value>
    </function>
    <function name="geometry_fprintf"
              c:identifier="hkl_geometry_fprintf"
              moved-to="Geometry.fprintf"
              introspectable="0">
      <doc xml:whitespace="preserve">print into a file the #HklGeometry</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="gpointer" c:type="FILE*"/>
        </parameter>
        <parameter name="self" transfer-ownership="none">
          <type name="Geometry" c:type="const HklGeometry*"/>
        </parameter>
      </parameters>
    </function>
    <function name="mode_fprintf"
              c:identifier="hkl_mode_fprintf"
              moved-to="Mode.fprintf"
              introspectable="0">
      <doc xml:whitespace="preserve">print to a FILE the HklPSeudoAxisEngineMode members</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="f" transfer-ownership="none">
          <type name="gpointer" c:type="FILE*"/>
        </parameter>
        <parameter name="self" transfer-ownership="none">
          <type name="Mode" c:type="const HklMode*"/>
        </parameter>
      </parameters>
    </function>
    <function name="sample_del_reflection"
              c:identifier="hkl_sample_del_reflection"
              moved-to="Sample.del_reflection"
              introspectable="0">
      <doc xml:whitespace="preserve">remove an HklSampleRefelction from the relfections list.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="reflection" transfer-ownership="none">
          <doc xml:whitespace="preserve">the reflection to remove.</doc>
          <type name="SampleReflection" c:type="HklSampleReflection*"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
