class Geometry
!!!173058.cpp!!!	Geometry()
      _source.setDirection(svector(1,0,0));
  
      // sample holder
      hkl::Holder * sample = _holders.add();
      _omega = sample->add_rotation("omega", svector(0., -1., 0.));

      //detector holder
      hkl::Holder * detector = _holders.add();
      _tth = detector->add_rotation("tth", svector(0., -1., 0.));
!!!173186.cpp!!!	Geometry(in omega : double, in tth : double)
      _source.setDirection(svector(1,0,0));
  
      // sample holder
      hkl::Holder * sample = _holders.add();
      _omega = sample->add_rotation("omega", svector(0., -1., 0.));
      _omega->set_current(omega);
      _omega->set_consign(omega);

      //detector holder
      hkl::Holder * detector = _holders.add();
      _tth = detector->add_rotation("tth", svector(0., -1., 0.));
      _tth->set_current(tth);
      _tth->set_consign(tth);
!!!173314.cpp!!!	Geometry(in geometry : Geometry)
  _omega = static_cast<hkl::axe::Rotation *>(_holders.axes()["omega"]);
  _tth = static_cast<hkl::axe::Rotation *>(_holders.axes()["tth"]);
!!!173570.cpp!!!	omega() : Rotation
      return _omega;
!!!173954.cpp!!!	tth() : Rotation
      return _tth;
!!!174082.cpp!!!	omega() : Rotation
      return _omega;
!!!174466.cpp!!!	tth() : Rotation
      return _tth;
!!!174594.cpp!!!	setAngles(in omega : double, in tth : double) : void
      _omega->set_current(omega);
      _tth->set_current(tth);
!!!174722.cpp!!!	setFromGeometry(in geometry : Geometry, in strict : bool) : void
  // check that chi and phi current and consign values are compatible with the convertion in case of a strict conversion
    if (strict)
      {
        // first the current value
        if (geometry.chi()->get_current() != 0 || geometry.phi()->get_current() != 0)
          {
            HKLEXCEPTION("\"chi\" and/or \"phi\" current values are wrong",
                         "\"chi\" = \"phi\" current values must be set to zero");
          }
        else
          {
            // the the consign values
            if (geometry.chi()->get_consign() != 0 || geometry.phi()->get_consign() != 0)
              {
                HKLEXCEPTION("\"chi\" and/or \"phi\" consign values are wrong",
                             "\"chi\" = \"phi\" consign values must be set to zero");
              }
          }
      }
    // everything ok so we can set the Geometry.
    _source = geometry.get_source();

    _omega->set_current(geometry.omega()->get_current().get_value());
    _tth->set_current(geometry.tth()->get_current().get_value());

    _omega->set_consign(geometry.omega()->get_consign().get_value());
    _tth->set_consign(geometry.tth()->get_consign().get_value());
!!!174850.cpp!!!	setFromGeometry(in geometry : Geometry, in strict : bool) : void
  // check that kappa and kphi current and consign values are compatible with the convertion in case of a strict conversion
    if (strict)
      {
        // first the current value
        if (geometry.kappa()->get_current() != 0 || geometry.kphi()->get_current() != 0)
          {
            HKLEXCEPTION("\"kappa\" and/or \"kphi\" axe(s) current values are wrong",
                         "\"kappa\" = \"kphi\" current values must be set to zero");
          }
        else
          {
            // the the consign values
            if (geometry.kappa()->get_consign() != 0 || geometry.kphi()->get_consign() != 0)
              {
                HKLEXCEPTION("\"kappa\" and/or \"kphi\" axe(s) consign values are wrong",
                             "\"kappa\" = \"kphi\" consign values must be set to zero");
              }
          }
      }
    // everything ok so we can set the Geometry.
    _source = geometry.get_source();

    _omega->set_current(geometry.komega()->get_current().get_value());
    _tth->set_current(geometry.tth()->get_current().get_value());

    _omega->set_consign(geometry.komega()->get_consign().get_value());
    _tth->set_consign(geometry.tth()->get_consign().get_value());
!!!174978.cpp!!!	setFromGeometry(in geometry : Geometry, in strict : bool) : void
    // check that gamma, mu, chi and phi current and consign values are compatible with the convertion
    if (strict)
      {
        // first the current value
        if (geometry.gamma()->get_current() != 0
            || geometry.mu()->get_current() != 0
            || geometry.chi()->get_current() != 0
            || geometry.phi()->get_current() != 0)
          {
            HKLEXCEPTION("\"gamma\" and/or \"mu\" and/or \"chi\" and/or \"phi\" current values are wrong",
                         "\"gamma\" = \"mu\" = \"chi\" = \"phi\" current values must be set to zero");
          }
        else
          {
            // the the consign values
            if (geometry.gamma()->get_consign() != 0
                || geometry.mu()->get_consign() != 0
                || geometry.chi()->get_consign() != 0
                || geometry.phi()->get_consign() != 0)
              {
                HKLEXCEPTION("\"gamma\" and/or \"mu\" and/or \"chi\" and/or \"phi\" consign values are wrong",
                             "\"gamma\" = \"mu\" = \"chi\" = \"phi\" consign values must be set to zero");
              }
          }
      }
    // ok so set the Geometry
    _source = geometry.get_source();

    _omega->set_current(geometry.omega()->get_current().get_value());
    _tth->set_current(geometry.delta()->get_current().get_value());

    _omega->set_consign(geometry.omega()->get_consign().get_value());
    _tth->set_consign(geometry.delta()->get_consign().get_value());
!!!175106.cpp!!!	setFromGeometry(in geometry : Geometry, in strict : bool) : void
    // check that gamma, mu, kappa and kphi current and consign values are compatible with the convertion
    if(strict)
      {
        // first the current value
        if (geometry.gamma()->get_current() != 0
            || geometry.mu()->get_current() != 0
            || geometry.kappa()->get_current() != 0
            || geometry.kphi()->get_current() != 0)
          {
            HKLEXCEPTION("\"gamma\" and/or \"mu\" and/or \"kappa\" and/or \"kphi\" current values are wrong",
                         "\"gamma\" = \"mu\" = \"kappa\" = \"kphi\" current values must be set to zero");
          }
        else
          {
            // the the consign values
            if (geometry.gamma()->get_consign() != 0
                || geometry.mu()->get_consign() != 0
                || geometry.kappa()->get_consign() != 0
                || geometry.kphi()->get_consign() != 0)
              {
                HKLEXCEPTION("\"gamma\" and/or \"mu\" and/or \"kappa\" and/or \"kphi\" consign values are wrong",
                             "\"gamma\" = \"mu\" = \"kappa\" = \"kphi\" consign values must be set to zero");
              }
          }
      }
    _source = geometry.get_source();

    _omega->set_current(geometry.komega()->get_current().get_value());
    _tth->set_current(geometry.delta()->get_current().get_value());

    _omega->set_consign(geometry.komega()->get_consign().get_value());
    _tth->set_consign(geometry.delta()->get_consign().get_value());
