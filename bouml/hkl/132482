format 40
"pseudoAxeEngine" // twoC::vertical::pseudoAxeEngine
  revision 12
  modified_by 2 "picca"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_infonote default shadow default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default
  
  cpp_h_dir "include/hkl"
  cpp_src_dir "src"
  cpp_namespace "hkl::twoC::vertical::pseudoAxeEngine"
  deploymentview 128898 "Deployment view"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default
    artifact 133122 "twoC_vertical_pseudoaxeengine"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${description}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${description}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 136194 // Th2th
	class_ref 136322 // Q2th
	class_ref 136450 // Q
      end
    end
  end

  classview 128898 "Class view"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_infonote default shadow default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default
    
    associated_deployment_view deploymentview_ref 128898 // Deployment view
    classdiagram 128258 "Diagram6"
      draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_infonote default shadow default
      size A0
    end

    class 136194 "Th2th"
      visibility package 
      nactuals 1
      actual class class_ref 135170 // PseudoAxeEngineTemp
        rank 0 value class_ref 132482 // Geometry
      cpp_decl "${description}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 137602 // <generalisation>
	relation 137218 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 137602 // <generalisation>
	  b multiplicity "" parent class_ref 135170 // PseudoAxeEngineTemp
      end

      classrelation 137730 // _omega (<directional aggregation>)
	relation 137346 o-->
	  a role_name "_omega" multiplicity "1" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 137730 // _omega (<directional aggregation>)
	  b multiplicity "" parent class_ref 130050 // Rotation
      end

      attribute 140546 "_omega0"
	protected explicit_type "double"
	cpp_decl "    ${description}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      classrelation 138114 // _tth (<directional aggregation>)
	relation 137730 o-->
	  a role_name "_tth" multiplicity "1" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 138114 // _tth (<directional aggregation>)
	  b multiplicity "" parent class_ref 130050 // Rotation
      end

      attribute 140674 "_tth0"
	protected explicit_type "double"
	cpp_decl "    ${description}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      classrelation 138498 // _th2th (<directional aggregation>)
	relation 138114 o-->
	  a role_name "_th2th" multiplicity "1" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 138498 // _th2th (<directional aggregation>)
	  b multiplicity "" parent class_ref 134786 // PseudoAxe
      end

      operation 204290 "Th2th"
	public explicit_return_type ""
	nparams 1
	  param inout name "geometry" type class_ref 132482 // Geometry
	cpp_decl "    ${description}${inline}${name}${(}${t0} & ${p0}${)}${volatile}${throw};
"
	cpp_def "${description}${inline}${class}::${name}${(}${t0} & ${p0}${)}${volatile}${throw} :
  PseudoAxeEngineTemp<hkl::twoC::vertical::Geometry>(geometry, false, true, false),
  _omega(geometry.omega()),
  _omega0(0),
  _tth(geometry.tth()),
  _tth0(0) 
{
  ${body}}
"
	
	
      end

      operation 204418 "~Th2th"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${description}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${description}${inline}${class}::${name}${(}${)}${volatile}${throw} 
{
  ${body}}
"
	
	
      end

      operation 204546 "initialize"
	cpp_virtual public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 128182 // HKLException
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Initialize the pseudoAxe.
 *
 * This method must be call before using a pseudoAxe.
 */"
      end

      operation 204674 "update"
	cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
      end

      operation 204802 "set"
	cpp_virtual public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 128182 // HKLException
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief set the current value of the PseudoAxe.
 * @throw HKLException if the pseudoAxe is not ready to be set.
 */"
      end

      operation 204930 "toStream"
	const public return_type class_ref 152194 // ostream
	nparams 1
	  param inout name "flux" type class_ref 152194 // ostream
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} & ${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} & ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief print on a stream the content of the ${class}
 * @param flux the ostream to modify.
 * @return the modified ostream
 */"
      end

      operation 205058 "fromStream"
	public return_type class_ref 152322 // istream
	nparams 1
	  param inout name "flux" type class_ref 152322 // istream
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} & ${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} & ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief restore the content of the ${class} from an istream
 * @param flux the istream.
 * @return the modified istream.
 * @todo problem of security here.
 */"
      end
    end

    class 136322 "Q2th"
      visibility package 
      nactuals 1
      actual class class_ref 135170 // PseudoAxeEngineTemp
        rank 0 value class_ref 132482 // Geometry
      cpp_decl "${description}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 138626 // <generalisation>
	relation 138242 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 138626 // <generalisation>
	  b multiplicity "" parent class_ref 135170 // PseudoAxeEngineTemp
      end

      classrelation 138754 // _omega (<directional aggregation>)
	relation 138370 o-->
	  a role_name "_omega" multiplicity "1" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 138754 // _omega (<directional aggregation>)
	  b multiplicity "" parent class_ref 130050 // Rotation
      end

      attribute 140802 "_omega0"
	protected explicit_type "double"
	cpp_decl "    ${description}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      classrelation 138882 // _tth (<directional aggregation>)
	relation 138498 o-->
	  a role_name "_tth" multiplicity "1" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 138882 // _tth (<directional aggregation>)
	  b multiplicity "" parent class_ref 130050 // Rotation
      end

      attribute 140930 "_tth0"
	protected explicit_type "double"
	cpp_decl "    ${description}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      classrelation 139266 // _q2th (<directional aggregation>)
	relation 138882 o-->
	  a role_name "_q2th" multiplicity "1" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 139266 // _q2th (<directional aggregation>)
	  b multiplicity "" parent class_ref 134786 // PseudoAxe
      end

      operation 205186 "Q2th"
	public explicit_return_type ""
	nparams 1
	  param inout name "geometry" type class_ref 132482 // Geometry
	cpp_decl "    ${description}${inline}${name}${(}${t0} & ${p0}${)}${volatile}${throw};
"
	cpp_def "${description}${inline}${class}::${name}${(}${t0} & ${p0}${)}${volatile}${throw} :
  PseudoAxeEngineTemp<hkl::twoC::vertical::Geometry>(geometry, false, true, false),
  _omega(geometry.omega()),
  _omega0(0),
  _tth(geometry.tth()),
  _tth0(0) 
{
  ${body}}
"
	
	
      end

      operation 205314 "~Q2th"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${description}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${description}${inline}${class}::${name}${(}${)}${volatile}${throw} 
{
  ${body}}
"
	
	
      end

      operation 205442 "initialize"
	cpp_virtual public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 128182 // HKLException
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Initialize the pseudoAxe.
 *
 * This method must be call before using a pseudoAxe.
 */"
      end

      operation 205570 "update"
	cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
      end

      operation 205698 "set"
	cpp_virtual public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 128182 // HKLException
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief set the current value of the PseudoAxe.
 * @throw HKLException if the pseudoAxe is not ready to be set.
 */"
      end

      operation 205826 "toStream"
	const public return_type class_ref 152194 // ostream
	nparams 1
	  param inout name "flux" type class_ref 152194 // ostream
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} & ${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} & ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief print on a stream the content of the ${class}
 * @param flux the ostream to modify.
 * @return the modified ostream
 */"
      end

      operation 205954 "fromStream"
	public return_type class_ref 152322 // istream
	nparams 1
	  param inout name "flux" type class_ref 152322 // istream
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} & ${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} & ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief restore the content of the ${class} from an istream
 * @param flux the istream.
 * @return the modified istream.
 * @todo problem of security here.
 */"
      end
    end

    class 136450 "Q"
      visibility package 
      nactuals 1
      actual class class_ref 135170 // PseudoAxeEngineTemp
        rank 0 value class_ref 132482 // Geometry
      cpp_decl "${description}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 139522 // <generalisation>
	relation 139138 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 139522 // <generalisation>
	  b multiplicity "" parent class_ref 135170 // PseudoAxeEngineTemp
      end

      classrelation 139778 // _tth (<directional aggregation>)
	relation 139394 o-->
	  a role_name "_tth" multiplicity "1" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 139778 // _tth (<directional aggregation>)
	  b multiplicity "" parent class_ref 130050 // Rotation
      end

      classrelation 140162 // _q (<directional aggregation>)
	relation 139778 o-->
	  a role_name "_q" multiplicity "1" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 140162 // _q (<directional aggregation>)
	  b multiplicity "" parent class_ref 134786 // PseudoAxe
      end

      operation 206082 "Q"
	public explicit_return_type ""
	nparams 1
	  param inout name "geometry" type class_ref 132482 // Geometry
	cpp_decl "    ${description}${inline}${name}${(}${t0} & ${p0}${)}${volatile}${throw};
"
	cpp_def "${description}${inline}${class}::${name}${(}${t0} & ${p0}${)}${volatile}${throw} :
  PseudoAxeEngineTemp<hkl::twoC::vertical::Geometry>(geometry, true, true, true),
  _tth(geometry.tth())
{
  ${body}}
"
	
	
      end

      operation 206210 "~Q"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${description}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${description}${inline}${class}::${name}${(}${)}${volatile}${throw} 
{
  ${body}}
"
	
	
      end

      operation 206338 "initialize"
	cpp_virtual public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 128182 // HKLException
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Initialize the pseudoAxe.
 *
 * This method must be call before using a pseudoAxe.
 */"
      end

      operation 206466 "update"
	cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
      end

      operation 206594 "set"
	cpp_virtual public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 128182 // HKLException
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief set the current value of the PseudoAxe.
 * @throw HKLException if the pseudoAxe is not ready to be set.
 */"
      end

      operation 267522 "uninitialize"
	cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Un-Initialize the pseudoAxe.
 * This method must be call to un-initialize a pseudoAxe.
 */"
      end

      operation 206722 "toStream"
	const public return_type class_ref 152194 // ostream
	nparams 1
	  param inout name "flux" type class_ref 152194 // ostream
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} & ${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} & ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief print on a stream the content of the ${class}
 * @param flux the ostream to modify.
 * @return the modified ostream
 */"
      end

      operation 206850 "fromStream"
	public return_type class_ref 152322 // istream
	nparams 1
	  param inout name "flux" type class_ref 152322 // istream
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} & ${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} & ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief restore the content of the ${class} from an istream
 * @param flux the istream.
 * @return the modified istream.
 * @todo problem of security here.
 */"
      end
    end
  end
end
