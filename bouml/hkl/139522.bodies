class Bissector
!!!218114.cpp!!!	computeAngles(in h : Value, in k : Value, in l : Value, in UB : smatrix) : void
      if (this->_parametersAreOk(h, k, l, UB))
        {
          double theta;
          svector hphi;
          this->_computeThetaAndHphi(h, k, l, UB, theta, hphi);
      
          // Calcule de Omega
          double omega = theta;
      
          // Calcule de Chi
          double s_chi = hphi.y();
          double c_chi = hphi.x()*hphi.x()+hphi.z()*hphi.z();
          if (c_chi < 0.)
            HKLEXCEPTION("Unreachable reflection.",
                         "Change h k l values");
          else
            c_chi = sqrt(c_chi);
          double chi = convenience::atan2(s_chi, c_chi);
      
          // Calcule de Phi
          double s_phi = hphi.x();
          double c_phi = hphi.z();
          double phi = convenience::atan2(s_phi, c_phi);
      
          _geometry.omega()->set_consign(omega);
          _geometry.chi()->set_consign(chi);
          _geometry.phi()->set_consign(phi);
          _geometry.tth()->set_consign(2.*theta);
        }
