format 29
"geometry" // geometry
  revision 5
  modified_by 2 "picca"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default shadow default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default shadow default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default drawing_language default shadow default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default shadow default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default shadow default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default shadow default
  show_activities default region_horizontally default drawing_language default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default shadow default
  show_infonote default drawing_language default
  
  cpp_h_dir "include/hkl"
  cpp_src_dir "src/"
  cpp_namespace "hkl::geometry"
  classview 128514 "Class view geometry"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default shadow default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default shadow default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default shadow default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default drawing_language default shadow default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default shadow default
    show_activities default region_horizontally default drawing_language default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default shadow default
    show_infonote default drawing_language default
    
    associated_deployment_view deploymentview_ref 128258 // Deployment geometry
    class 132866 "Eulerian6C"cpp_decl "${description}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 133634 // <generalisation>
	relation 133250 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 133634 // <generalisation>
	  b parent class_ref 131714 // Geometry
      end

      attribute 136194 "_mu"
	protected type class_ref 130050 // Axe
	cpp_decl "    ${description}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      attribute 135682 "_omega"
	protected type class_ref 130050 // Axe
	cpp_decl "    ${description}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      attribute 135810 "_chi"
	protected type class_ref 130050 // Axe
	cpp_decl "    ${description}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      attribute 135938 "_phi"
	protected type class_ref 130050 // Axe
	cpp_decl "    ${description}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      attribute 136066 "_gamma"
	protected type class_ref 130050 // Axe
	cpp_decl "    ${description}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      attribute 136322 "_delta"
	protected type class_ref 130050 // Axe
	cpp_decl "    ${description}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      operation 178178 "Eulerian6C"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${description}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${description}${inline}${class}::${name}${(}${)}${volatile}${throw} :
  Geometry(\"Eulerian 6 circles\", \"A default Eulerian 6 circles diffractometer.\") 
{
  ${body}}
"
	
	
	comment "/**
 *  @brief Default constructor
 */"
      end

      operation 178306 "Eulerian6C"
	public explicit_return_type ""
	nparams 6
	  param in name "mu" explicit_type "double"
	  param in name "omega" explicit_type "double"
	  param in name "chi" explicit_type "double"
	  param in name "phi" explicit_type "double"
	  param in name "gamma" explicit_type "double"
	  param in name "delta" explicit_type "double"
	cpp_decl "    ${description}${inline}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${volatile}${throw};
"
	cpp_def "${description}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${volatile}${throw} :
  Geometry(\"Eulerian 6 circles\", \"A default Eulerian 6 circles diffractometer.\") 
{
  ${body}}
"
	
	
	comment "/**
 *  @brief Another constructor.
 *  @param ${p0} the first angle value.
 *  @param ${p1} the second angle value.
 *  @param ${p2} the third angle value.
 *  @param ${p3} the fourth angle value.
 *  @param ${p4} the fifth angle value.
 *  @param ${p5} the sixth angle value.
 */"
      end

      operation 213890 "~Eulerian6C"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${description}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${description}${inline}${class}::${name}${(}${)}${volatile}${throw} 
{
  ${body}}
"
	
	
      end

      operation 178434 "Eulerian6C"
	stereotype "copy"
	public explicit_return_type ""
	nparams 1
	  param in name "geometry" type class_ref 132866 // Eulerian6C
	cpp_decl "    ${description}${inline}${name}${(}const ${t0} & ${p0}${)}${volatile}${throw};
"
	cpp_def "${description}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${volatile}${throw} :
  Geometry(geometry)
{
  ${body}}
"
	
	
	comment "/**
 * @brief Copy Constructor.
 */"
      end

      operation 178562 "operator="
	public return_type class_ref 132866 // Eulerian6C
	nparams 1
	  param in name "geometry" type class_ref 132866 // Eulerian6C
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Assign a geometry to another one.
 * @param ${p0} The ${t0} to assign.
 * @return the assigned ${class}.
 */"
      end

      operation 180354 "mu"
	public return_type class_ref 130050 // Axe
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Get the _${name} Axe.
 * @return A pointer on the _${name} Axe.
 */"
      end

      operation 178690 "omega"
	public return_type class_ref 130050 // Axe
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Get the _${name} Axe.
 * @return A pointer on the _${name} Axe.
 */"
      end

      operation 178818 "chi"
	public return_type class_ref 130050 // Axe
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Get the _${name} Axe.
 * @return A pointer on the _${name} Axe.
 */"
      end

      operation 178946 "phi"
	public return_type class_ref 130050 // Axe
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Get the _${name} Axe.
 * @return A pointer on the _${name} Axe.
 */"
      end

      operation 179074 "gamma"
	public return_type class_ref 130050 // Axe
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Get the _${name} Axe.
 * @return A pointer on the _${name} Axe.
 */"
      end

      operation 180482 "delta"
	public return_type class_ref 130050 // Axe
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Get the _${name} Axe.
 * @return A pointer on the _${name} Axe.
 */"
      end

      operation 180610 "mu"
	const public return_type class_ref 130050 // Axe
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}const ${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Get the _${name} Axe.
 * @return A pointer on the _${name} Axe.
 */"
      end

      operation 179202 "omega"
	const public return_type class_ref 130050 // Axe
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}const ${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Get the _${name} Axe.
 * @return A pointer on the _${name} Axe.
 */"
      end

      operation 179330 "chi"
	const public return_type class_ref 130050 // Axe
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}const ${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Get the _${name} Axe.
 * @return A pointer on the _${name} Axe.
 */"
      end

      operation 179458 "phi"
	const public return_type class_ref 130050 // Axe
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}const ${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Get the _${name} Axe.
 * @return A pointer on the _${name} Axe.
 */"
      end

      operation 179586 "gamma"
	const public return_type class_ref 130050 // Axe
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}const ${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Get the _${name} Axe.
 * @return A pointer on the _${name} Axe.
 */"
      end

      operation 180738 "delta"
	const public return_type class_ref 130050 // Axe
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}const ${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Get the _${name} Axe.
 * @return A pointer on the _${name} Axe.
 */"
      end

      operation 179714 "setAngles"
	public explicit_return_type "void"
	nparams 6
	  param in name "mu" explicit_type "double"
	  param in name "omega" explicit_type "double"
	  param in name "chi" explicit_type "double"
	  param in name "phi" explicit_type "double"
	  param in name "gamma" explicit_type "double"
	  param in name "delta" explicit_type "double"
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Set the angles of the eulerian4CD::Vertical geometry. 
 * @param ${p0} The value of the \"omega\" Axe.
 * @param ${p1} The value of the \"chi\" Axe.
 * @param ${p2} The value of the \"phi\" Axe.
 * @param ${p3} The value of the \"2theta\" Axe.
 * @param ${p4} The value of the \"gamma\" Axe.
 * @param ${p5} The value of the \"delta\" Axe.
 */"
      end

      operation 179842 "setFromGeometry"
	public explicit_return_type "void"
	nparams 2
	  param in name "geometry" type class_ref 132482 // Vertical
	  param in name "strict" explicit_type "bool"
	nexceptions 1
	  exception class_ref 128182 // HKLException
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Set an eulerian4C::Vertical Geometry from another Geometry.
 * @param ${p0} The ${t0}.
 * @param ${p1} false or true if we must not care of the strictness of the conversion.
 * @throw HKLException
 */"
      end

      operation 179970 "setFromGeometry"
	public explicit_return_type "void"
	nparams 2
	  param in name "geometry" type class_ref 131842 // Vertical
	  param in name "strict" explicit_type "bool"
	nexceptions 1
	  exception class_ref 128182 // HKLException
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Set an eulerian4C::Vertical Geometry from another Geometry.
 * @param ${p0} The ${t0}.
 * @param ${p1} false or true if we must not care of the strictness of the conversion.
 * @throw HKLException
 */"
      end

      operation 180098 "setFromGeometry"
	public explicit_return_type "void"
	nparams 2
	  param in name "geometry" type class_ref 132610 // Vertical
	  param in name "strict" explicit_type "bool"
	nexceptions 1
	  exception class_ref 128182 // HKLException
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Set an eulerian4C::Vertical Geometry from another Geometry.
 * @param ${p0} The ${t0}.
 * @param ${p1} false or true if we must not care of the strictness of the conversion.
 * @throw HKLException
 */"
      end

      operation 180226 "setFromGeometry"
	public explicit_return_type "void"
	nparams 2
	  param in name "geometry" explicit_type "Kappa6C"
	  param in name "strict" explicit_type "bool"
	nexceptions 1
	  exception class_ref 128182 // HKLException
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Set an eulerian4C::Vertical Geometry from another Geometry.
 * @param ${p0} The ${t0}.
 * @param ${p1} false or true if we must not care of the strictness of the conversion.
 * @throw HKLException
 */"
      end
    end

    class 132738 "Kappa"cpp_decl "${description}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 133506 // <generalisation>
	relation 133122 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 133506 // <generalisation>
	  b parent class_ref 131714 // Geometry
      end

      attribute 135554 "_alpha"
	protected explicit_type "double"
	cpp_decl "    ${description}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	idl_decl ""
	get_oper operation_ref 177538 // get_alpha
      end

      operation 177410 "Kappa"
	protected explicit_return_type ""
	nparams 3
	  param in name "name" type class_ref 129026 // string
	  param in name "description" type class_ref 129026 // string
	  param in name "alpha" explicit_type "double"
	cpp_decl "    ${description}${inline}${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} ${p2}${)}${volatile}${throw};
"
	cpp_def "${description}${inline}${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} ${p2}${)}${volatile}${throw} :
  Geometry(name, description),
  _alpha(alpha) 
{
  ${body}}
"
	
	
      end

      operation 213378 "~Kappa"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${description}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${description}${inline}${class}::${name}${(}${)}${volatile}${throw} 
{
  ${body}}
"
	
	
      end

      operation 177538 "get_alpha"
	const cpp_inline public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}const ${type} ${name}${(}${)}${const}${volatile}${throw};
"
	cpp_def "${description}${inline}const ${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  return _alpha;
}
"
	cpp_name_spec "get${name}"
	final 
	java_name_spec "get${name}"
	
	idl_name_spec "get${name}"
	get_of_attribute attribute_ref 135554 // _alpha
      end

      operation 177794 "printToStream"
	const public explicit_return_type "ostream"
	nparams 1
	  param inout name "flux" explicit_type "ostream"
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} & ${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} & ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief print the ${class} into a flux
 * @param ${p0} The stream to print into.
 * @return The modified flux.
 */"
      end

      operation 177922 "toStream"
	const public explicit_return_type "ostream"
	nparams 1
	  param inout name "flux" explicit_type "ostream"
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} & ${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} & ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief print on a stream the content of the ${class}
 * @param flux the ostream to modify.
 * @return the modified ostream
 */"
      end

      operation 178050 "fromStream"
	public explicit_return_type "istream"
	nparams 1
	  param inout name "flux" explicit_type "istream"
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} & ${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} & ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief restore the content of the ${class} from an istream
 * @param flux the istream.
 * @return the modified istream.
 * @todo problem of security here.
 */"
      end
    end

    class 132994 "Kappa6C"cpp_decl "${description}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 134018 // <generalisation>
	relation 133634 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 134018 // <generalisation>
	  b parent class_ref 132738 // Kappa
      end

      attribute 136450 "_mu"
	protected type class_ref 130050 // Axe
	cpp_decl "    ${description}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      attribute 136578 "_komega"
	protected type class_ref 130050 // Axe
	cpp_decl "    ${description}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      attribute 136706 "_kappa"
	protected type class_ref 130050 // Axe
	cpp_decl "    ${description}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      attribute 136834 "_kphi"
	protected type class_ref 130050 // Axe
	cpp_decl "    ${description}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      attribute 136962 "_gamma"
	protected type class_ref 130050 // Axe
	cpp_decl "    ${description}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      attribute 137090 "_delta"
	protected type class_ref 130050 // Axe
	cpp_decl "    ${description}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      operation 180866 "Kappa6C"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${description}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${description}${inline}${class}::${name}${(}${)}${volatile}${throw} :
  Kappa(\"Kappa 6 circles\", \"A default Kappa 6 circles diffractometer.\", 50 * constant::math::degToRad) 
{
  ${body}}
"
	
	
	comment "/**
 *  @brief Default constructor
 */"
      end

      operation 180994 "Kappa6C"
	public explicit_return_type ""
	nparams 6
	  param in name "mu" explicit_type "double"
	  param in name "komega" explicit_type "double"
	  param in name "kappa" explicit_type "double"
	  param in name "kphi" explicit_type "double"
	  param in name "gamma" explicit_type "double"
	  param in name "delta" explicit_type "double"
	cpp_decl "    ${description}${inline}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${volatile}${throw};
"
	cpp_def "${description}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${volatile}${throw} :
  Kappa(\"Kappa 6 circles\", \"A default Kappa 6 circles diffractometer.\", 50 * constant::math::degToRad) 
{
  ${body}}
"
	
	
	comment "/**
 *  @brief Another constructor.
 *  @param ${p0} the first angle value.
 *  @param ${p1} the second angle value.
 *  @param ${p2} the third angle value.
 *  @param ${p3} the fourth angle value.
 *  @param ${p4} the fifth angle value.
 *  @param ${p5} the sixth angle value.
 */"
      end

      operation 214018 "~Kappa6C"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${description}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${description}${inline}${class}::${name}${(}${)}${volatile}${throw} 
{
  ${body}}
"
	
	
      end

      operation 181122 "Kappa6C"
	stereotype "copy"
	public explicit_return_type ""
	nparams 1
	  param in name "geometry" type class_ref 132994 // Kappa6C
	cpp_decl "    ${description}${inline}${name}${(}const ${t0} & ${p0}${)}${volatile}${throw};
"
	cpp_def "${description}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${volatile}${throw} :
  Kappa(geometry)
{
  ${body}}
"
	
	
	comment "/**
 * @brief Copy Constructor.
 */"
      end

      operation 181250 "operator="
	public return_type class_ref 132994 // Kappa6C
	nparams 1
	  param in name "geometry" type class_ref 132994 // Kappa6C
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Assign a geometry to another one.
 * @param ${p0} The ${t0} to assign.
 * @return the assigned ${class}.
 */"
      end

      operation 181378 "mu"
	public return_type class_ref 130050 // Axe
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Get the _${name} Axe.
 * @return A pointer on the _${name} Axe.
 */"
      end

      operation 181506 "komega"
	public return_type class_ref 130050 // Axe
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Get the _${name} Axe.
 * @return A pointer on the _${name} Axe.
 */"
      end

      operation 181634 "kappa"
	public return_type class_ref 130050 // Axe
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Get the _${name} Axe.
 * @return A pointer on the _${name} Axe.
 */"
      end

      operation 181762 "kphi"
	public return_type class_ref 130050 // Axe
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Get the _${name} Axe.
 * @return A pointer on the _${name} Axe.
 */"
      end

      operation 181890 "gamma"
	public return_type class_ref 130050 // Axe
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Get the _${name} Axe.
 * @return A pointer on the _${name} Axe.
 */"
      end

      operation 182018 "delta"
	public return_type class_ref 130050 // Axe
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Get the _${name} Axe.
 * @return A pointer on the _${name} Axe.
 */"
      end

      operation 182146 "mu"
	const public return_type class_ref 130050 // Axe
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}const ${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Get the _${name} Axe.
 * @return A pointer on the _${name} Axe.
 */"
      end

      operation 182274 "komega"
	const public return_type class_ref 130050 // Axe
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}const ${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Get the _${name} Axe.
 * @return A pointer on the _${name} Axe.
 */"
      end

      operation 182402 "kappa"
	const public return_type class_ref 130050 // Axe
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}const ${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Get the _${name} Axe.
 * @return A pointer on the _${name} Axe.
 */"
      end

      operation 182530 "kphi"
	const public return_type class_ref 130050 // Axe
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}const ${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Get the _${name} Axe.
 * @return A pointer on the _${name} Axe.
 */"
      end

      operation 182658 "gamma"
	const public return_type class_ref 130050 // Axe
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}const ${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Get the _${name} Axe.
 * @return A pointer on the _${name} Axe.
 */"
      end

      operation 182786 "delta"
	const public return_type class_ref 130050 // Axe
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}const ${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Get the _${name} Axe.
 * @return A pointer on the _${name} Axe.
 */"
      end

      operation 182914 "setAngles"
	public explicit_return_type "void"
	nparams 6
	  param in name "mu" explicit_type "double"
	  param in name "komega" explicit_type "double"
	  param in name "kappa" explicit_type "double"
	  param in name "kphi" explicit_type "double"
	  param in name "gamma" explicit_type "double"
	  param in name "delta" explicit_type "double"
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Set the angles of the eulerian4CD::Vertical geometry. 
 * @param ${p0} The value of the \"omega\" Axe.
 * @param ${p1} The value of the \"chi\" Axe.
 * @param ${p2} The value of the \"phi\" Axe.
 * @param ${p3} The value of the \"2theta\" Axe.
 * @param ${p4} The value of the \"gamma\" Axe.
 * @param ${p5} The value of the \"delta\" Axe.
 */"
      end

      operation 183042 "setFromGeometry"
	public explicit_return_type "void"
	nparams 2
	  param in name "geometry" type class_ref 132482 // Vertical
	  param in name "strict" explicit_type "bool"
	nexceptions 1
	  exception class_ref 128182 // HKLException
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Set an eulerian4C::Vertical Geometry from another Geometry.
 * @param ${p0} The ${t0}.
 * @param ${p1} false or true if we must not care of the strictness of the conversion.
 * @throw HKLException
 */"
      end

      operation 183170 "setFromGeometry"
	public explicit_return_type "void"
	nparams 2
	  param in name "geometry" type class_ref 131842 // Vertical
	  param in name "strict" explicit_type "bool"
	nexceptions 1
	  exception class_ref 128182 // HKLException
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Set an eulerian4C::Vertical Geometry from another Geometry.
 * @param ${p0} The ${t0}.
 * @param ${p1} false or true if we must not care of the strictness of the conversion.
 * @throw HKLException
 */"
      end

      operation 183298 "setFromGeometry"
	public explicit_return_type "void"
	nparams 2
	  param in name "geometry" type class_ref 132610 // Vertical
	  param in name "strict" explicit_type "bool"
	nexceptions 1
	  exception class_ref 128182 // HKLException
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Set an eulerian4C::Vertical Geometry from another Geometry.
 * @param ${p0} The ${t0}.
 * @param ${p1} false or true if we must not care of the strictness of the conversion.
 * @throw HKLException
 */"
      end

      operation 183426 "setFromGeometry"
	public explicit_return_type "void"
	nparams 2
	  param in name "geometry" type class_ref 132866 // Eulerian6C
	  param in name "strict" explicit_type "bool"
	nexceptions 1
	  exception class_ref 128182 // HKLException
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Set an eulerian4C::Vertical Geometry from another Geometry.
 * @param ${p0} The ${t0}.
 * @param ${p1} false or true if we must not care of the strictness of the conversion.
 * @throw HKLException
 */"
      end
    end
  end

  deploymentview 128258 "Deployment geometry"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default
    artifact 131202 "geometry_kappa"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${description}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${description}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 132738 // Kappa
      end
    end

    artifact 131330 "geometry_eulerian6C"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${description}
${includes}
${declarations}
namespace hkl { namespace geometry { namespace eulerian4C { class Vertical;} } }
namespace hkl { namespace geometry { namespace kappa4C { class Vertical;} } }
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${description}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 132866 // Eulerian6C
      end
    end

    artifact 131458 "geometry_kappa6C"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${description}
${includes}
${declarations}
namespace hkl { namespace geometry { namespace eulerian4C { class Vertical; } } }
namespace hkl { namespace geometry { namespace kappa4C { class Vertical; } } }
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${description}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 132994 // Kappa6C
      end
    end
  end

  package_ref 128258 // twoC

  package_ref 128130 // eulerian4C

  package_ref 128386 // kappa4C
end
