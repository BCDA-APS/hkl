class PseudoAxeEngineList
!!!203010.cpp!!!	pseudoAxes() : PseudoAxeList
      return _pseudoAxes;
!!!203138.cpp!!!	push_back(in pseudoAxeEngine : PseudoAxeEngine) : void
      _pseudoAxeEngines.push_back(pseudoAxeEngine);
      
      PseudoAxeList & pseudoAxes = pseudoAxeEngine->pseudoAxes();
      PseudoAxeList::iterator iter = pseudoAxes.begin();
      PseudoAxeList::iterator end = pseudoAxes.end();
      while(iter != end)
        {
          _pseudoAxes.push_back(*iter);
          ++iter;
        }
!!!203394.cpp!!!	clear() : void
      std::vector<PseudoAxeEngine *>::iterator iter = _pseudoAxeEngines.begin();
      std::vector<PseudoAxeEngine *>::iterator end = _pseudoAxeEngines.end();
      while(iter != end)
        {
          delete *iter;
          ++iter;
        }
      _pseudoAxeEngines.clear();
      _pseudoAxes.clear();
!!!202370.cpp!!!	operator==(in pseudoAxeEngineList : PseudoAxeEngineList) : bool
      if (_pseudoAxeEngines.size() != pseudoAxeEngineList._pseudoAxeEngines.size())
        return false;
      else
        {
          std::vector<PseudoAxeEngine *>::const_iterator iter = _pseudoAxeEngines.begin();
          std::vector<PseudoAxeEngine *>::const_iterator end = _pseudoAxeEngines.end();
          std::vector<PseudoAxeEngine *>::const_iterator iter2 = pseudoAxeEngineList._pseudoAxeEngines.begin();
          while(iter != end)
            {
              if (!(**iter == **iter2))
                return false;
              ++iter;
              ++iter2;
            }
          return true;
        }
!!!202498.cpp!!!	printToStream(inout flux : ostream) : ostream
      flux << " PseudoAxeEngineList : " << _pseudoAxeEngines.size() << std::endl;
      std::vector<PseudoAxeEngine *>::const_iterator iter = _pseudoAxeEngines.begin();
      std::vector<PseudoAxeEngine *>::const_iterator end = _pseudoAxeEngines.end();
      while(iter != end)
        {
          (*iter)->printToStream(flux);
          ++iter;
        }
      return flux;
!!!202626.cpp!!!	toStream(inout flux : ostream) : ostream
      flux << " " << _pseudoAxeEngines.size();
      std::vector<PseudoAxeEngine *>::const_iterator iter = _pseudoAxeEngines.begin();
      std::vector<PseudoAxeEngine *>::const_iterator end = _pseudoAxeEngines.end();
      while(iter != end)
        {
          (*iter)->toStream(flux);
          ++iter;
        }
      return flux;
!!!202754.cpp!!!	fromStream(inout flux : istream) : istream
      unsigned int size;
      flux >> size;
      std::vector<PseudoAxeEngine *>::iterator iter = _pseudoAxeEngines.begin();
      for(unsigned int i=0;i<size; i++)
        {
          (*iter)->fromStream(flux);
          ++iter;
        }
      return flux;
