class Diffractometer
!!!227970.cpp!!!	Diffractometer()
        // On met Ã  jour la liste des modes utilisables.
        _modes.add( new hkl::eulerian4C::vertical::mode::Bissector("Bissector", "Omega = 2theta / 2. \n there is no parameters for this mode.", _geom_T) );
        _modes.add( new hkl::eulerian4C::vertical::mode::Delta_Theta("Delta Theta", "Omega = theta + dtheta.", _geom_T) );
        _modes.add( new hkl::eulerian4C::vertical::mode::Constant_Omega("Constant Omega", "Omega = Constante.", _geom_T) );
        _modes.add( new hkl::eulerian4C::vertical::mode::Constant_Chi("Constant Chi", "chi = Constante.", _geom_T) );
        _modes.add( new hkl::eulerian4C::vertical::mode::Constant_Phi("Constant Phi", "phi = Constante.", _geom_T) );
        
        // On ajoute les pseudoAxes
        _pseudoAxeEngines.push_back( new hkl::eulerian4C::vertical::pseudoAxeEngine::Th2th(_geom_T) );
        _pseudoAxeEngines.push_back( new hkl::eulerian4C::vertical::pseudoAxeEngine::Q2th(_geom_T) );
        _pseudoAxeEngines.push_back( new hkl::eulerian4C::vertical::pseudoAxeEngine::Q(_geom_T) );
        _pseudoAxeEngines.push_back( new hkl::eulerian4C::vertical::pseudoAxeEngine::Psi(_geom_T, _samples) );
!!!228098.cpp!!!	~Diffractometer()
        // On supprime les modes.
        _modes.clear();
        // On supprime les pseudoAxes.
        _pseudoAxeEngines.clear();
