class Geometry
!!!175234.cpp!!!	Geometry(in alpha : double)
    _source.setDirection(svector(1,0,0));

    // add the sample holder
    hkl::Holder * holder = _holders.add();
    _komega = holder->add_rotation("komega", svector(0., -1., 0.));
    _kappa = holder->add_rotation("kappa", svector(0., -cos(_alpha), -sin(_alpha)));
    _kphi = holder->add_rotation("kphi", svector(0., -1., 0.));

    // add the detector holder
    holder = _holders.add();
    _tth = holder->add_rotation("tth", svector(0., -1., 0.));
!!!175362.cpp!!!	Geometry(in alpha : double, in komega : double, in kappa : double, in kphi : double, in tth : double)
    _source.setDirection(svector(1,0,0));

    // add the sample holder
    hkl::Holder * holder = _holders.add();
    _komega = holder->add_rotation("komega", svector(0., -1., 0.));
    _kappa = holder->add_rotation("kappa", svector(0., -cos(_alpha), -sin(_alpha)));
    _kphi = holder->add_rotation("kphi", svector(0., -1., 0.));

    // add the detector holder
    holder = _holders.add();
    _tth = holder->add_rotation("tth", svector(0., -1., 0.));

    _komega->set_current(komega);
    _kappa->set_current(kappa);
    _kphi->set_current(kphi);
    _tth->set_current(tth);

    _komega->set_consign(komega);
    _kappa->set_consign(kappa);
    _kphi->set_consign(kphi);
    _tth->set_consign(tth);
!!!175490.cpp!!!	Geometry(in geometry : Geometry)
    _komega = static_cast<hkl::axe::Rotation *>(_holders.axes()["komega"]);
    _kappa = static_cast<hkl::axe::Rotation *>(_holders.axes()["kappa"]);
    _kphi = static_cast<hkl::axe::Rotation *>(_holders.axes()["kphi"]);
    _tth = static_cast<hkl::axe::Rotation *>(_holders.axes()["tth"]);
!!!175746.cpp!!!	komega() : Rotation
      return _komega;
!!!175874.cpp!!!	kappa() : Rotation
      return _kappa;
!!!176002.cpp!!!	kphi() : Rotation
      return _kphi;
!!!176130.cpp!!!	tth() : Rotation
      return _tth;
!!!176258.cpp!!!	komega() : Rotation
      return _komega;
!!!176386.cpp!!!	kappa() : Rotation
      return _kappa;
!!!176514.cpp!!!	kphi() : Rotation
      return _kphi;
!!!176642.cpp!!!	tth() : Rotation
      return _tth;
!!!176770.cpp!!!	setAngles(in komega : double, in kappa : double, in kphi : double, in tth : double) : void
      _komega->set_current(komega);
      _kappa->set_current(kappa);
      _kphi->set_current(kphi);
      _tth->set_current(tth);
!!!176898.cpp!!!	setFromGeometry(in geometry : Geometry, in strict : bool) : void
  // update the source
    _source = geometry.get_source();

    if (strict)
      {
        _kappa->set_current(0);
        _kphi->set_current(0);

        _kappa->set_consign(0);
        _kphi->set_consign(0);
      }
    _komega->set_current(geometry.omega()->get_current());
    _tth->set_current(geometry.tth()->get_current());

    _komega->set_consign(geometry.omega()->get_consign());
    _tth->set_consign(geometry.tth()->get_consign());
!!!177026.cpp!!!	setFromGeometry(in geometry : Geometry, in strict : bool) : void
    double const & omega = geometry.omega()->get_current().get_value();
    double const & chi = geometry.chi()->get_current().get_value();
    double const & phi = geometry.phi()->get_current().get_value();
    double komega, kappa, kphi;
    //this line can throw an exception so deport the source modification after.
    hkl::eulerian_to_kappa(omega, chi, phi, _alpha, komega, kappa, kphi);

    double const & omega_c = geometry.omega()->get_consign().get_value();
    double const & chi_c = geometry.chi()->get_consign().get_value();
    double const & phi_c = geometry.phi()->get_consign().get_value();
    double komega_c, kappa_c, kphi_c;
    //this line can throw an exception so deport the source modification after.
    hkl::eulerian_to_kappa(omega_c, chi_c, phi_c, _alpha, komega_c, kappa_c, kphi_c);

  // update the source
    _source = geometry.get_source();

    _komega->set_current(komega);
    _kappa->set_current(kappa);
    _kphi->set_current(kphi);
    _tth->set_current(geometry.tth()->get_current());

    _komega->set_consign(komega_c);
    _kappa->set_consign(kappa_c);
    _kphi->set_consign(kphi_c);
    _tth->set_consign(geometry.tth()->get_consign());
!!!177154.cpp!!!	setFromGeometry(in geometry : Geometry, in strict : bool) : void
    if (strict)
      {
        if (geometry.mu()->get_current() != 0
            || geometry.gamma()->get_current() != 0)
          {
            HKLEXCEPTION("\"gamma\" and/or \"mu\" current values are wrong",
                         "\"gamma\" = \"mu\" current values must be set to zero");
          }
        else
          {
            if (geometry.mu()->get_consign() != 0
                || geometry.gamma()->get_consign() != 0)
              {
                HKLEXCEPTION("\"gamma\" and/or \"mu\" consign values are wrong",
                             "\"gamma\" = \"mu\" consign values must be set to zero");
              }
          }
      }
    double const & omega = geometry.omega()->get_current().get_value();
    double const & chi = geometry.chi()->get_current().get_value();
    double const & phi = geometry.phi()->get_current().get_value();
    double komega, kappa, kphi;
    // the next line can throw an exception so deport the geometry modification once convertion is ok. 
    hkl::eulerian_to_kappa(omega, chi, phi, _alpha, komega, kappa, kphi);

    double const & omega_c = geometry.omega()->get_consign().get_value();
    double const & chi_c = geometry.chi()->get_consign().get_value();
    double const & phi_c = geometry.phi()->get_consign().get_value();
    double komega_c, kappa_c, kphi_c;
    // the next line can throw an exception so deport the geometry modification once convertion is ok. 
    hkl::eulerian_to_kappa(omega_c, chi_c, phi_c, _alpha, komega_c, kappa_c, kphi_c);

    // update the source
    _source = geometry.get_source();

    _komega->set_current(komega);
    _kappa->set_current(kappa);
    _kphi->set_current(kphi);
    _tth->set_current(geometry.delta()->get_current());

    _komega->set_consign(komega_c);
    _kappa->set_consign(kappa_c);
    _kphi->set_consign(kphi_c);
    _tth->set_consign(geometry.delta()->get_consign());

!!!177282.cpp!!!	setFromGeometry(in geometry : Geometry, in strict : bool) : void
    // update the source
    if (strict)
      {
        if (geometry.mu()->get_current() != 0
            || geometry.gamma()->get_current() != 0)
          {
            HKLEXCEPTION("\"gamma\" and/or \"mu\" current values are wrong",
                         "\"gamma\" = \"mu\" current values must be set to zero");
          }
        else
          {
            if (geometry.mu()->get_consign() != 0
                || geometry.gamma()->get_consign() != 0)
              {
                HKLEXCEPTION("\"gamma\" and/or \"mu\" consign values are wrong",
                             "\"gamma\" = \"mu\" consign values must be set to zero");
              }
          }
      }

    // update the source
    _source = geometry.get_source();

    _komega->set_current(geometry.komega()->get_current());
    _kappa->set_current(geometry.kappa()->get_current());
    _kphi->set_current(geometry.kphi()->get_current());
    _tth->set_current(geometry.delta()->get_current());

    _komega->set_consign(geometry.komega()->get_consign());
    _kappa->set_consign(geometry.kappa()->get_consign());
    _kphi->set_consign(geometry.kphi()->get_consign());
    _tth->set_consign(geometry.delta()->get_consign());
