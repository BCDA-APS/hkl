format 40
"pseudoAxeEngine" // eulerian6C::pseudoAxeEngine
  revision 11
  modified_by 2 "picca"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_infonote default shadow default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default
  
  cpp_h_dir "include/hkl"
  cpp_src_dir "src"
  cpp_namespace "hkl::eulerian6C::pseudoAxeEngine"
  classview 129282 "Class view"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_infonote default shadow default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default
    
    associated_deployment_view deploymentview_ref 129282 // Deployment view
    classdiagram 128642 "Diagram"
      draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_infonote default shadow default
      size A3
    end

    class 136834 "Tth"
      visibility package 
      nactuals 1
      actual class class_ref 135170 // PseudoAxeEngineTemp
        rank 0 value class_ref 132866 // Geometry
      cpp_decl "${description}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/**
 * @brief The eulerian 6-circle Vertical diffractometer Tth pseudoAxe.
 *
 * This pseudoAxe keep the detector in the scattering plan define by \\f$ \\vec{k_i} \\f$ and \\f$ \\vec{k_f} \\f$.
 * Its value correspond to the angle between thoses two vectors.
 *
 * We start from :
 * \\f[
 *   \\vec{k_i} =
 *     \\left(
 *       \\begin{matrix}
 *         1 \\\\
 *         0 \\\\
 *         0
 *       \\end{matrix}
 *     \\right)
 *   \\hspace{1cm}
 *   \\vec{k_f} =
 *     \\left(
 *       \\begin{matrix}
 *         \\cos\\gamma \\cos\\delta \\\\
 *         \\sin\\gamma \\cos\\delta \\\\
 *         \\sin\\delta
 *       \\end{matrix}
 *     \\right)
 * \\f]
 * to compute the \\f$ 2\\theta \\f$ angle, we can use the scalar product.
 * Indeed :
 * \\f[
 *   \\vec{k_i} \\cdot \\vec{k_f} = k_i \\cdot k_f \\cdot \\cos\\left(\\widehat{\\vec{k_i},\\vec{k_f}}\\right)
 * \\f]
 * so
 * \\f[
 *   2\\theta = \\arccos ( \\cos\\gamma \\cos\\delta ) \\hspace{1cm} \\arccos x \\in [0, \\pi]
 * \\f]
 * nevertheless we need to orientate the space to disambiguate this equation.
 * So we decide to give :
 * \\f[
 *   \\mbox{sign of}\\ 2\\theta = \\mbox{sign of}\\ \\delta\\ \\mbox{when}\\ \\delta \\neq 0 
 * \\f]
 * and
 * \\f[
 *   \\mbox{sign of}\\ 2\\theta = \\mbox{sign of}\\ \\gamma\\ \\mbox{when}\\ \\delta = 0 
 * \\f]
 */
"
      classrelation 144130 // <generalisation>
	relation 143746 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 144130 // <generalisation>
	  b multiplicity "" parent class_ref 135170 // PseudoAxeEngineTemp
      end

      classrelation 145410 // _direction (<directional aggregation>)
	relation 145026 o-->
	  a role_name "_direction" multiplicity "1" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 145410 // _direction (<directional aggregation>)
	  b multiplicity "" parent class_ref 129922 // Parameter
      end

      classrelation 144258 // _gamma (<directional aggregation>)
	relation 143874 o-->
	  a role_name "_gamma" multiplicity "1" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 144258 // _gamma (<directional aggregation>)
	  b multiplicity "" parent class_ref 130050 // Rotation
      end

      attribute 141570 "_gamma0"
	protected explicit_type "double"
	cpp_decl "    ${description}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      classrelation 144386 // _delta (<directional aggregation>)
	relation 144002 o-->
	  a role_name "_delta" multiplicity "1" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 144386 // _delta (<directional aggregation>)
	  b multiplicity "" parent class_ref 130050 // Rotation
      end

      attribute 141698 "_delta0"
	protected explicit_type "double"
	cpp_decl "    ${description}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      classrelation 144770 // _axe0 (<directional aggregation by value>)
	relation 144386 *-->
	  a role_name "_axe0" multiplicity "1" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 144770 // _axe0 (<directional aggregation by value>)
	  b multiplicity "" parent class_ref 128002 // svector
      end

      classrelation 145026 // _tth_r (<directional aggregation by value>)
	relation 144642 *-->
	  a role_name "_tth_r" multiplicity "1" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 145026 // _tth_r (<directional aggregation by value>)
	  b multiplicity "" parent class_ref 129794 // Range
      end

      classrelation 145154 // _tth_w (<directional aggregation by value>)
	relation 144770 *-->
	  a role_name "_tth_w" multiplicity "1" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 145154 // _tth_w (<directional aggregation by value>)
	  b multiplicity "" parent class_ref 129794 // Range
      end

      classrelation 145282 // _tth (<directional aggregation>)
	relation 144898 o-->
	  a role_name "_tth" multiplicity "1" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 145282 // _tth (<directional aggregation>)
	  b multiplicity "" parent class_ref 134786 // PseudoAxe
      end

      operation 209026 "Tth"
	public explicit_return_type ""
	nparams 1
	  param inout name "geometry" type class_ref 132866 // Geometry
	cpp_decl "    ${description}${inline}${name}${(}${t0} & ${p0}${)}${volatile}${throw};
"
	cpp_def "${description}${inline}${class}::${name}${(}${t0} & ${p0}${)}${volatile}${throw} :
  hkl::PseudoAxeEngineTemp<hkl::eulerian6C::Geometry>(geometry, false, true, false),
  _gamma(geometry.gamma()),
  _gamma0(0),
  _delta(geometry.delta()),
  _delta0(0)
{
  ${body}}
"
	
	
      end

      operation 209154 "~Tth"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${description}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${description}${inline}${class}::${name}${(}${)}${volatile}${throw} 
{
  ${body}}
"
	
	
      end

      operation 209282 "initialize"
	cpp_virtual public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 128182 // HKLException
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Initialize the pseudoAxe.
 *
 * This method must be call before using a pseudoAxe.
 */"
      end

      operation 209538 "update"
	cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
      end

      operation 209666 "set"
	cpp_virtual public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 128182 // HKLException
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief set the current value of the PseudoAxe.
 * @throw HKLException if the pseudoAxe is not ready to be set.
 */"
      end

      operation 231042 "set_write_from_read"
	cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
      end

      operation 209794 "toStream"
	const public explicit_return_type "ostream"
	nparams 1
	  param inout name "flux" explicit_type "ostream"
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} & ${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} & ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief print on a stream the content of the ${class}
 * @param flux the ostream to modify.
 * @return the modified ostream
 */"
      end

      operation 209922 "fromStream"
	public explicit_return_type "istream"
	nparams 1
	  param inout name "flux" explicit_type "istream"
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} & ${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} & ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief restore the content of the ${class} from an istream
 * @param flux the istream.
 * @return the modified istream.
 * @todo problem of security here.
 */"
      end

      operation 209410 "_minmax"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "range" type class_ref 129794 // Range
	  param in name "gamma" type class_ref 145282 // Axe
	  param in name "delta" type class_ref 145282 // Axe
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}, const ${t1} * ${p1}, const ${t2} * ${p2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, const ${t1} * ${p1}, const ${t2} * ${p2}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
      end
    end

    class 136962 "Q"
      visibility package 
      nactuals 1
      actual class class_ref 135170 // PseudoAxeEngineTemp
        rank 0 value class_ref 132866 // Geometry
      cpp_decl "${description}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/**
 * @brief The eulerian 4-circle Vertical diffractometer Psi pseudoAxe.
 *
 * This pseudoAxe represent a rotation around the scattering vector \\f$ \\vec{Q} \\f$.
 *
 * To compute this pseudoAxe we start from the fondamental equation
 * \\f[
 *  R = \\Omega \\chi \\phi
 * \\f]
 * thus
 * \\f[
 *  \\left(
 *    \\begin{matrix}
 *      \\cos\\omega \\cos\\phi - \\cos\\chi \\sin\\omega \\sin\\phi & -\\sin\\chi \\sin\\omega & -\\cos\\omega \\sin\\phi - \\cos\\chi \\sin\\omega \\cos\\phi \\\\
 *      -\\sin\\chi \\sin\\phi                                 & \\cos\\chi             & -\\sin\\chi \\cos\\phi \\\\
 *      \\sin\\omega \\cos\\phi - \\cos\\chi \\cos\\omega \\sin\\phi & \\sin\\chi \\cos\\omega  & -\\sin\\omega \\sin\\phi + \\cos\\chi \\cos\\omega \\cos\\phi
 *    \\end{matrix}
 *  \\right)
 * \\f]
 * 
 * Now \\f$\\psi\\f$ is the rotation angle around the scattering vector \\f$\\vec{Q}\\f$.
 * So we can write:
 * \\f[
 *  R = \\Psi R_0
 * \\f]
 * where \\f$\\Psi\\f$ is the rotation matrix around the \\f$\\vec{Q}\\f$ vector
 * and \\f$R_0\\f$ the \\f$R\\f$ matrix for \\f$\\Psi=0\\f$
 * 
 * The 1st where \\f$\\sin\\chi > 0\\f$ is:
 * \\f{eqnarray*}
 *  \\omega & = & \\arctan(-R_{0,1}, R_{2,1}) \\\\
 *  \\chi & = & \\arctan(\\sqrt{R_{0,1}^2+R_{2,1}^2}, R_{1,1}) \\\\
 *  \\phi & = & \\arctan(-R_{1,0}, -R_{1,2})
 * \\f}
 *
 * The 2nd one \\f$\\sin\\chi < 0\\f$ is:
 * \\f{eqnarray*}
 *  \\omega' & = & \\arctan(R_{0,1}, -R_{2,1}) \\\\
 *  \\chi' & = & \\arctan(-\\sqrt{R_{0,1}^2+R_{2,1}^2}, R_{1,1}) = -\\chi\\\\
 *  \\phi' & = & \\arctan(R_{1,0}, R_{1,2})
 * \\f}
 *
 * Thoses two solutions are not valid if \\f$\\chi=0\\f$ or \\f$\\chi=\\pi\\f$.
 * In that case the \\f$ R\\f$ matrix can be simplify:
 * \\f[
 *  \\left(
 *    \\begin{matrix}
 *      \\pm\\cos(\\omega+\\phi) & 0 & \\mp\\sin(\\omega+\\phi) \\\\
 *      0                 & \\pm1 & 0 \\\\
 *      \\pm\\sin(\\omega+\\phi) & 0 & \\pm\\cos(\\omega+\\phi)
 *    \\end{matrix}
 *  \\right)
 * \\f]
 */
"
      classrelation 145538 // <generalisation>
	relation 145154 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 145538 // <generalisation>
	  b multiplicity "" parent class_ref 135170 // PseudoAxeEngineTemp
      end

      classrelation 145794 // _gamma (<directional aggregation>)
	relation 145410 o-->
	  a role_name "_gamma" multiplicity "1" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 145794 // _gamma (<directional aggregation>)
	  b multiplicity "" parent class_ref 130050 // Rotation
      end

      classrelation 145922 // _delta (<directional aggregation>)
	relation 145538 o-->
	  a role_name "_delta" multiplicity "1" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 145922 // _delta (<directional aggregation>)
	  b multiplicity "" parent class_ref 130050 // Rotation
      end

      classrelation 146178 // _q_r (<directional aggregation by value>)
	relation 145794 *-->
	  a role_name "_q_r" multiplicity "1" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 146178 // _q_r (<directional aggregation by value>)
	  b multiplicity "" parent class_ref 129794 // Range
      end

      classrelation 146306 // _q_w (<directional aggregation by value>)
	relation 145922 *-->
	  a role_name "_q_w" multiplicity "1" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 146306 // _q_w (<directional aggregation by value>)
	  b multiplicity "" parent class_ref 129794 // Range
      end

      classrelation 146434 // _q (<directional aggregation>)
	relation 146050 o-->
	  a role_name "_q" multiplicity "1" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 146434 // _q (<directional aggregation>)
	  b multiplicity "" parent class_ref 134786 // PseudoAxe
      end

      classrelation 146562 // _tth_engine (<directional aggregation>)
	relation 146178 o-->
	  a role_name "_tth_engine" multiplicity "1" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 146562 // _tth_engine (<directional aggregation>)
	  b multiplicity "" parent class_ref 136834 // Tth
      end

      classrelation 146690 // _tth (<directional aggregation>)
	relation 146306 o-->
	  a role_name "_tth" multiplicity "1" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 146690 // _tth (<directional aggregation>)
	  b multiplicity "" parent class_ref 134786 // PseudoAxe
      end

      operation 210050 "Q"
	public explicit_return_type ""
	nparams 1
	  param inout name "geometry" type class_ref 132866 // Geometry
	cpp_decl "    ${description}${inline}${name}${(}${t0} & ${p0}${)}${volatile}${throw};
"
	cpp_def "${description}${inline}${class}::${name}${(}${t0} & ${p0}${)}${volatile}${throw} :
  hkl::PseudoAxeEngineTemp<hkl::eulerian6C::Geometry>(geometry, false, true, false),
  _gamma(geometry.gamma()),
  _delta(geometry.delta())
{
  ${body}}
"
	
	
      end

      operation 210178 "~Q"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${description}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${description}${inline}${class}::${name}${(}${)}${volatile}${throw} 
{
  ${body}}
"
	
	
      end

      operation 210306 "initialize"
	cpp_virtual public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 128182 // HKLException
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief Initialize the pseudoAxe.
 *
 * This method must be call before using a pseudoAxe.
 */"
      end

      operation 210434 "update"
	cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
      end

      operation 210562 "set"
	cpp_virtual public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 128182 // HKLException
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief set the current value of the PseudoAxe.
 * @throw HKLException if the pseudoAxe is not ready to be set.
 */"
      end

      operation 231170 "set_write_from_read"
	cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
      end

      operation 210690 "toStream"
	const public explicit_return_type "ostream"
	nparams 1
	  param inout name "flux" explicit_type "ostream"
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} & ${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} & ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief print on a stream the content of the ${class}
 * @param flux the ostream to modify.
 * @return the modified ostream
 */"
      end

      operation 210818 "fromStream"
	public explicit_return_type "istream"
	nparams 1
	  param inout name "flux" explicit_type "istream"
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} & ${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} & ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
	comment "/**
 * @brief restore the content of the ${class} from an istream
 * @param flux the istream.
 * @return the modified istream.
 * @todo problem of security here.
 */"
      end

      operation 210946 "_minmax"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "range" type class_ref 129794 // Range
	  param in name "gamma" type class_ref 129794 // Range
	  param in name "delta" type class_ref 129794 // Range
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}}
"
	
	
      end
    end

    class 138114 "Psi"
      visibility package stereotype "typedef" base_type class_ref 137090 // Derived
      nactuals 2
      actual class class_ref 145026 // DerivedWithSample
        rank 0 value class_ref 132866 // Geometry
      actual class class_ref 145026 // DerivedWithSample
        rank 1 value class_ref 136578 // Psi
      cpp_decl "${description}typedef ${type} ${name};
"
      java_decl ""
      idl_decl "${comment}typedef ${type} ${name};
"
      explicit_switch_type ""
      
      classrelation 163074 // <generalisation>
	relation 162690 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 163074 // <generalisation>
	  b multiplicity "" parent class_ref 145026 // DerivedWithSample
      end
    end
  end

  deploymentview 129282 "Deployment view"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default
    artifact 133506 "eulerian6C_pseudoaxeengine"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${description}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${description}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 136834 // Tth
	class_ref 136962 // Q
	class_ref 138114 // Psi
      end
    end
  end
end
