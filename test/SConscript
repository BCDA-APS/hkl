# vi:filetype=python:expandtab:tabstop=2:shiftwidth=2
import os

Import('env')

sources = Split("""
                test.c
                svecmat_test.c
                main.c
                """)

"""
                quaternion_test.cpp
                interval_test.cpp
                source_test.cpp
                axis_test.cpp

                parameter_test.cpp
                object_test.cpp
                value_test.cpp
                range_test.cpp
                hklobject_test.cpp
                fitparameter_test.cpp
                lattice_test.cpp

                holder_test.cpp
                holderlist_test.cpp
                geometry_test.cpp
                twoC_vertical_geometry_test.cpp
                twoC_vertical_mode_test.cpp
                twoC_vertical_pseudoaxeengine_test.cpp
                twoC_vertical_diffractometer_test.cpp

                geometry_eulerian4C_test.cpp
                geometry_eulerian6C_test.cpp
                geometry_kappa4C_test.cpp
                geometry_kappa6C_test.cpp
                reflection_test.cpp
                reflectionlist_test.cpp
                sample_test.cpp
                samplelist_test.cpp
                affinement_simplex_test.cpp
                mode_eulerian4C_test.cpp
                mode_kappa4C_test.cpp
                mode_kappa6C_test.cpp
                pseudoaxe_eulerian4C_test.cpp
                pseudoaxe_kappa4C_test.cpp
                pseudoaxe_eulerian6C_test.cpp
                pseudoaxe_kappa6C_test.cpp
                diffractometer_eulerian4C_test.cpp
                diffractometer_kappa4C_test.cpp
                diffractometer_kappa6C_test.cpp


                """

includes = ['#include']

libpath = ['../src']

libs = ['hkl', 'm']

if env.has_key('test') and env['test']:
  lenv = env.Copy()
  if lenv['profile']:
    lenv.AppendUnique(CPPDEFINES='PROFILE')

  lenv.AppendUnique(CPPPATH = includes)
  lenv.AppendUnique(LIBS = libs)
  lenv.AppendUnique(LIBPATH = libpath)

  test = lenv.Program(target = 'test', source = sources)
  lenv.Test("test.passed", test)
  Default(lenv.Alias("check", "test.passed"))
