# vi:filetype=python:expandtab:tabstop=2:shiftwidth=2
Import('env')

lenv = env.Copy()

sources = Split("""
                HKLException.cpp
                svector.cpp
                smatrix.cpp
                quaternion.cpp
                convenience.cpp
                mystring.cpp
                object.cpp
                value.cpp
                range.cpp
                parameter.cpp
                parameterlist.cpp
                fitparameter.cpp
                fitparameterlist.cpp
                observer.cpp
                axe.cpp
                hklobject.cpp
                source.cpp
                lattice.cpp
                affinement.cpp
                affinement_simplex.cpp
                affinementlist.cpp
                geometry.cpp
                geometry_twoC.cpp
                geometry_eulerian4C.cpp
                geometry_eulerian6C.cpp
                geometry_kappa.cpp
                geometry_kappa4C.cpp
                geometry_kappa6C.cpp
                reflection.cpp
                reflection_monocrystal.cpp
                reflectionfactory.cpp
                reflectionlist.cpp
                sample.cpp
                sample_monocrystal.cpp
                samplefactory.cpp
                samplelist.cpp
                pseudoaxe.cpp
                pseudoaxelist.cpp
                pseudoaxeengine.cpp
                pseudoaxeengine_twoC.cpp
                pseudoaxeengine_kappa4C.cpp
                mode.cpp
                mode_twoC.cpp
                mode_eulerian4C.cpp
                mode_eulerian6C.cpp
                modelist.cpp
                """)
"""
                pseudoaxe_twoC.cpp
                pseudoaxe_eulerian4C.cpp
                pseudoaxe_kappa4C.cpp
                pseudoaxe_eulerian6C.cpp

                diffractometer.cpp
                diffractometer_twoC.cpp
                diffractometer_eulerian4C.cpp
                diffractometer_eulerian6C.cpp
                diffractometer_kappa4C.cpp
                diffractometer_kappa6C.cpp
                diffractometerfactory.cpp
                """

includes = ['#include/hkl']

lenv.AppendUnique(CPPPATH = includes)
Default(lenv.Library(target = 'hkl', source = sources))
